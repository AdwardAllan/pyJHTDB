/* soapStub.h
   Generated by gSOAP 2.8.28 from TurbulenceService.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#define SOAP_NAMESPACE_OF_turb1	"http://turbulence.pha.jhu.edu/"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20828
# error "GSOAP VERSION 20828 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/* TurbulenceService.h:149 */
#ifndef SOAP_TYPE_turb1__SpatialInterpolation
#define SOAP_TYPE_turb1__SpatialInterpolation (11)
/* turb1:SpatialInterpolation */
enum turb1__SpatialInterpolation
{
	turb1__SpatialInterpolation__None = 0,
	turb1__SpatialInterpolation__None_USCOREFd4 = 1,
	turb1__SpatialInterpolation__None_USCOREFd6 = 2,
	turb1__SpatialInterpolation__None_USCOREFd8 = 3,
	turb1__SpatialInterpolation__Fd4Lag4 = 4,
	turb1__SpatialInterpolation__Lag4 = 5,
	turb1__SpatialInterpolation__Lag6 = 6,
	turb1__SpatialInterpolation__Lag8 = 7,
	turb1__SpatialInterpolation__M1Q4 = 8,
	turb1__SpatialInterpolation__M2Q4 = 9,
	turb1__SpatialInterpolation__M3Q4 = 10,
	turb1__SpatialInterpolation__M4Q4 = 11,
	turb1__SpatialInterpolation__M1Q6 = 12,
	turb1__SpatialInterpolation__M2Q6 = 13,
	turb1__SpatialInterpolation__M3Q6 = 14,
	turb1__SpatialInterpolation__M4Q6 = 15,
	turb1__SpatialInterpolation__M1Q8 = 16,
	turb1__SpatialInterpolation__M2Q8 = 17,
	turb1__SpatialInterpolation__M3Q8 = 18,
	turb1__SpatialInterpolation__M4Q8 = 19,
	turb1__SpatialInterpolation__M1Q10 = 20,
	turb1__SpatialInterpolation__M2Q10 = 21,
	turb1__SpatialInterpolation__M3Q10 = 22,
	turb1__SpatialInterpolation__M4Q10 = 23,
	turb1__SpatialInterpolation__M1Q12 = 24,
	turb1__SpatialInterpolation__M2Q12 = 25,
	turb1__SpatialInterpolation__M3Q12 = 26,
	turb1__SpatialInterpolation__M4Q12 = 27,
	turb1__SpatialInterpolation__M1Q14 = 28,
	turb1__SpatialInterpolation__M2Q14 = 29,
	turb1__SpatialInterpolation__M3Q14 = 30,
	turb1__SpatialInterpolation__M4Q14 = 31
};
#endif

/* TurbulenceService.h:188 */
#ifndef SOAP_TYPE_turb1__TemporalInterpolation
#define SOAP_TYPE_turb1__TemporalInterpolation (12)
/* turb1:TemporalInterpolation */
enum turb1__TemporalInterpolation
{
	turb1__TemporalInterpolation__None = 0,
	turb1__TemporalInterpolation__PCHIP = 1
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs, and Unions                                               *
 *                                                                            *
\******************************************************************************/

struct xsd__base64Binary;	/* TurbulenceService.h:131 */
struct turb1__ArrayOfPoint3;	/* TurbulenceService.h:210 */
struct turb1__Point3;	/* TurbulenceService.h:214 */
struct turb1__ArrayOfVector3;	/* TurbulenceService.h:244 */
struct turb1__Vector3;	/* TurbulenceService.h:248 */
struct turb1__ArrayOfPressure;	/* TurbulenceService.h:278 */
struct turb1__Pressure;	/* TurbulenceService.h:282 */
struct turb1__ArrayOfVector3P;	/* TurbulenceService.h:308 */
struct turb1__Vector3P;	/* TurbulenceService.h:312 */
struct turb1__ArrayOfVelocityGradient;	/* TurbulenceService.h:344 */
struct turb1__VelocityGradient;	/* TurbulenceService.h:348 */
struct turb1__ArrayOfVelocityHessian;	/* TurbulenceService.h:390 */
struct turb1__VelocityHessian;	/* TurbulenceService.h:394 */
struct turb1__ArrayOfPressureHessian;	/* TurbulenceService.h:454 */
struct turb1__PressureHessian;	/* TurbulenceService.h:458 */
struct turb1__ArrayOfThresholdInfo;	/* TurbulenceService.h:494 */
struct turb1__ThresholdInfo;	/* TurbulenceService.h:498 */
struct turb1__ArrayOfSGSTensor;	/* TurbulenceService.h:530 */
struct turb1__SGSTensor;	/* TurbulenceService.h:534 */
struct turb1__ArrayOfFloat;	/* TurbulenceService.h:570 */
struct turb1__ArrayOfArrayOfFloat;	/* TurbulenceService.h:586 */
struct _turb1__NullOp;	/* TurbulenceService.h:603 */
struct _turb1__NullOpResponse;	/* TurbulenceService.h:620 */
struct _turb1__GetVelocity;	/* TurbulenceService.h:635 */
struct _turb1__GetVelocityResponse;	/* TurbulenceService.h:662 */
struct _turb1__GetMagneticField;	/* TurbulenceService.h:677 */
struct _turb1__GetMagneticFieldResponse;	/* TurbulenceService.h:704 */
struct _turb1__GetVectorPotential;	/* TurbulenceService.h:719 */
struct _turb1__GetVectorPotentialResponse;	/* TurbulenceService.h:746 */
struct _turb1__GetPressure;	/* TurbulenceService.h:761 */
struct _turb1__GetPressureResponse;	/* TurbulenceService.h:788 */
struct _turb1__GetDensity;	/* TurbulenceService.h:803 */
struct _turb1__GetDensityResponse;	/* TurbulenceService.h:830 */
struct _turb1__GetTemperature;	/* TurbulenceService.h:845 */
struct _turb1__GetTemperatureResponse;	/* TurbulenceService.h:872 */
struct _turb1__GetVelocityAndPressure;	/* TurbulenceService.h:887 */
struct _turb1__GetVelocityAndPressureResponse;	/* TurbulenceService.h:914 */
struct _turb1__GetVelocityAndTemperature;	/* TurbulenceService.h:929 */
struct _turb1__GetVelocityAndTemperatureResponse;	/* TurbulenceService.h:956 */
struct _turb1__GetVelocityGradient;	/* TurbulenceService.h:971 */
struct _turb1__GetVelocityGradientResponse;	/* TurbulenceService.h:998 */
struct _turb1__GetMagneticFieldGradient;	/* TurbulenceService.h:1013 */
struct _turb1__GetMagneticFieldGradientResponse;	/* TurbulenceService.h:1040 */
struct _turb1__GetVectorPotentialGradient;	/* TurbulenceService.h:1055 */
struct _turb1__GetVectorPotentialGradientResponse;	/* TurbulenceService.h:1082 */
struct _turb1__GetPressureGradient;	/* TurbulenceService.h:1097 */
struct _turb1__GetPressureGradientResponse;	/* TurbulenceService.h:1124 */
struct _turb1__GetDensityGradient;	/* TurbulenceService.h:1139 */
struct _turb1__GetDensityGradientResponse;	/* TurbulenceService.h:1166 */
struct _turb1__GetTemperatureGradient;	/* TurbulenceService.h:1181 */
struct _turb1__GetTemperatureGradientResponse;	/* TurbulenceService.h:1208 */
struct _turb1__GetVelocityHessian;	/* TurbulenceService.h:1223 */
struct _turb1__GetVelocityHessianResponse;	/* TurbulenceService.h:1250 */
struct _turb1__GetMagneticHessian;	/* TurbulenceService.h:1265 */
struct _turb1__GetMagneticHessianResponse;	/* TurbulenceService.h:1292 */
struct _turb1__GetVectorPotentialHessian;	/* TurbulenceService.h:1307 */
struct _turb1__GetVectorPotentialHessianResponse;	/* TurbulenceService.h:1334 */
struct _turb1__GetPressureHessian;	/* TurbulenceService.h:1349 */
struct _turb1__GetPressureHessianResponse;	/* TurbulenceService.h:1376 */
struct _turb1__GetDensityHessian;	/* TurbulenceService.h:1391 */
struct _turb1__GetDensityHessianResponse;	/* TurbulenceService.h:1418 */
struct _turb1__GetTemperatureHessian;	/* TurbulenceService.h:1433 */
struct _turb1__GetTemperatureHessianResponse;	/* TurbulenceService.h:1460 */
struct _turb1__GetVelocityLaplacian;	/* TurbulenceService.h:1475 */
struct _turb1__GetVelocityLaplacianResponse;	/* TurbulenceService.h:1502 */
struct _turb1__GetMagneticFieldLaplacian;	/* TurbulenceService.h:1517 */
struct _turb1__GetMagneticFieldLaplacianResponse;	/* TurbulenceService.h:1544 */
struct _turb1__GetVectorPotentialLaplacian;	/* TurbulenceService.h:1559 */
struct _turb1__GetVectorPotentialLaplacianResponse;	/* TurbulenceService.h:1586 */
struct _turb1__GetPosition;	/* TurbulenceService.h:1601 */
struct _turb1__GetPositionResponse;	/* TurbulenceService.h:1630 */
struct _turb1__GetThreshold;	/* TurbulenceService.h:1645 */
struct _turb1__GetThresholdResponse;	/* TurbulenceService.h:1684 */
struct _turb1__GetForce;	/* TurbulenceService.h:1699 */
struct _turb1__GetForceResponse;	/* TurbulenceService.h:1726 */
struct _turb1__GetInvariant;	/* TurbulenceService.h:1741 */
struct _turb1__GetInvariantResponse;	/* TurbulenceService.h:1768 */
struct _turb1__GetBoxFilter;	/* TurbulenceService.h:1783 */
struct _turb1__GetBoxFilterResponse;	/* TurbulenceService.h:1810 */
struct _turb1__GetBoxFilterSGS;	/* TurbulenceService.h:1825 */
struct _turb1__GetBoxFilterSGSResponse;	/* TurbulenceService.h:1852 */
struct _turb1__GetBoxFilterSGSsymtensor;	/* TurbulenceService.h:1867 */
struct _turb1__GetBoxFilterSGSsymtensorResponse;	/* TurbulenceService.h:1894 */
struct _turb1__GetBoxFilterSGStensor;	/* TurbulenceService.h:1909 */
struct _turb1__GetBoxFilterSGStensorResponse;	/* TurbulenceService.h:1936 */
struct _turb1__GetBoxFilterSGSvector;	/* TurbulenceService.h:1951 */
struct _turb1__GetBoxFilterSGSvectorResponse;	/* TurbulenceService.h:1978 */
struct _turb1__GetBoxFilterSGSscalar;	/* TurbulenceService.h:1993 */
struct _turb1__GetBoxFilterSGSscalarResponse;	/* TurbulenceService.h:2020 */
struct _turb1__GetBoxFilterGradient;	/* TurbulenceService.h:2035 */
struct _turb1__GetBoxFilterGradientResponse;	/* TurbulenceService.h:2064 */
struct _turb1__GetLaplacianOfGradient;	/* TurbulenceService.h:2079 */
struct _turb1__GetLaplacianOfGradientResponse;	/* TurbulenceService.h:2108 */
struct _turb1__GetVelocityBatch;	/* TurbulenceService.h:2123 */
struct _turb1__GetVelocityBatchResponse;	/* TurbulenceService.h:2150 */
struct _turb1__GetRawVelocity;	/* TurbulenceService.h:2165 */
struct _turb1__GetRawVelocityResponse;	/* TurbulenceService.h:2198 */
struct _turb1__GetRawMagneticField;	/* TurbulenceService.h:2213 */
struct _turb1__GetRawMagneticFieldResponse;	/* TurbulenceService.h:2246 */
struct _turb1__GetRawVectorPotential;	/* TurbulenceService.h:2261 */
struct _turb1__GetRawVectorPotentialResponse;	/* TurbulenceService.h:2294 */
struct _turb1__GetRawPressure;	/* TurbulenceService.h:2309 */
struct _turb1__GetRawPressureResponse;	/* TurbulenceService.h:2342 */
struct _turb1__GetRawDensity;	/* TurbulenceService.h:2357 */
struct _turb1__GetRawDensityResponse;	/* TurbulenceService.h:2390 */
struct _turb1__GetRawTemperature;	/* TurbulenceService.h:2405 */
struct _turb1__GetRawTemperatureResponse;	/* TurbulenceService.h:2438 */
struct _turb1__GetAnyCutoutWeb;	/* TurbulenceService.h:2453 */
struct _turb1__GetAnyCutoutWebResponse;	/* TurbulenceService.h:2496 */
struct _turb1__GetData_USCOREPython;	/* TurbulenceService.h:2511 */
struct _turb1__GetData_USCOREPythonResponse;	/* TurbulenceService.h:2538 */
struct _turb1__GetFilter_USCOREPython;	/* TurbulenceService.h:2553 */
struct _turb1__GetFilter_USCOREPythonResponse;	/* TurbulenceService.h:2584 */
struct _turb1__GetPosition_USCOREPython;	/* TurbulenceService.h:2599 */
struct _turb1__GetPosition_USCOREPythonResponse;	/* TurbulenceService.h:2628 */
struct _turb1__GetThreshold_USCOREPython;	/* TurbulenceService.h:2643 */
struct _turb1__GetThreshold_USCOREPythonResponse;	/* TurbulenceService.h:2682 */
struct __turb1__NullOp;	/* TurbulenceService.h:3006 */
struct __turb1__GetVelocity;	/* TurbulenceService.h:3061 */
struct __turb1__GetMagneticField;	/* TurbulenceService.h:3116 */
struct __turb1__GetVectorPotential;	/* TurbulenceService.h:3171 */
struct __turb1__GetPressure;	/* TurbulenceService.h:3226 */
struct __turb1__GetDensity;	/* TurbulenceService.h:3281 */
struct __turb1__GetTemperature;	/* TurbulenceService.h:3336 */
struct __turb1__GetVelocityAndPressure;	/* TurbulenceService.h:3391 */
struct __turb1__GetVelocityAndTemperature;	/* TurbulenceService.h:3446 */
struct __turb1__GetVelocityGradient;	/* TurbulenceService.h:3501 */
struct __turb1__GetMagneticFieldGradient;	/* TurbulenceService.h:3556 */
struct __turb1__GetVectorPotentialGradient;	/* TurbulenceService.h:3611 */
struct __turb1__GetPressureGradient;	/* TurbulenceService.h:3666 */
struct __turb1__GetDensityGradient;	/* TurbulenceService.h:3721 */
struct __turb1__GetTemperatureGradient;	/* TurbulenceService.h:3776 */
struct __turb1__GetVelocityHessian;	/* TurbulenceService.h:3831 */
struct __turb1__GetMagneticHessian;	/* TurbulenceService.h:3886 */
struct __turb1__GetVectorPotentialHessian;	/* TurbulenceService.h:3941 */
struct __turb1__GetPressureHessian;	/* TurbulenceService.h:3996 */
struct __turb1__GetDensityHessian;	/* TurbulenceService.h:4051 */
struct __turb1__GetTemperatureHessian;	/* TurbulenceService.h:4106 */
struct __turb1__GetVelocityLaplacian;	/* TurbulenceService.h:4161 */
struct __turb1__GetMagneticFieldLaplacian;	/* TurbulenceService.h:4216 */
struct __turb1__GetVectorPotentialLaplacian;	/* TurbulenceService.h:4271 */
struct __turb1__GetPosition;	/* TurbulenceService.h:4327 */
struct __turb1__GetThreshold;	/* TurbulenceService.h:4382 */
struct __turb1__GetForce;	/* TurbulenceService.h:4437 */
struct __turb1__GetInvariant;	/* TurbulenceService.h:4492 */
struct __turb1__GetBoxFilter;	/* TurbulenceService.h:4547 */
struct __turb1__GetBoxFilterSGS;	/* TurbulenceService.h:4604 */
struct __turb1__GetBoxFilterSGSsymtensor;	/* TurbulenceService.h:4661 */
struct __turb1__GetBoxFilterSGStensor;	/* TurbulenceService.h:4716 */
struct __turb1__GetBoxFilterSGSvector;	/* TurbulenceService.h:4772 */
struct __turb1__GetBoxFilterSGSscalar;	/* TurbulenceService.h:4827 */
struct __turb1__GetBoxFilterGradient;	/* TurbulenceService.h:4882 */
struct __turb1__GetLaplacianOfGradient;	/* TurbulenceService.h:4938 */
struct __turb1__GetVelocityBatch;	/* TurbulenceService.h:4994 */
struct __turb1__GetRawVelocity;	/* TurbulenceService.h:5050 */
struct __turb1__GetRawMagneticField;	/* TurbulenceService.h:5106 */
struct __turb1__GetRawVectorPotential;	/* TurbulenceService.h:5162 */
struct __turb1__GetRawPressure;	/* TurbulenceService.h:5218 */
struct __turb1__GetRawDensity;	/* TurbulenceService.h:5274 */
struct __turb1__GetRawTemperature;	/* TurbulenceService.h:5330 */
struct __turb1__GetAnyCutoutWeb;	/* TurbulenceService.h:5386 */
struct __turb1__GetData_USCOREPython;	/* TurbulenceService.h:5441 */
struct __turb1__GetFilter_USCOREPython;	/* TurbulenceService.h:5496 */
struct __turb1__GetPosition_USCOREPython;	/* TurbulenceService.h:5551 */
struct __turb1__GetThreshold_USCOREPython;	/* TurbulenceService.h:5606 */
struct __turb1__NullOp_;	/* TurbulenceService.h:5661 */
struct __turb1__GetVelocity_;	/* TurbulenceService.h:5716 */
struct __turb1__GetMagneticField_;	/* TurbulenceService.h:5771 */
struct __turb1__GetVectorPotential_;	/* TurbulenceService.h:5826 */
struct __turb1__GetPressure_;	/* TurbulenceService.h:5881 */
struct __turb1__GetDensity_;	/* TurbulenceService.h:5936 */
struct __turb1__GetTemperature_;	/* TurbulenceService.h:5991 */
struct __turb1__GetVelocityAndPressure_;	/* TurbulenceService.h:6046 */
struct __turb1__GetVelocityAndTemperature_;	/* TurbulenceService.h:6101 */
struct __turb1__GetVelocityGradient_;	/* TurbulenceService.h:6156 */
struct __turb1__GetMagneticFieldGradient_;	/* TurbulenceService.h:6211 */
struct __turb1__GetVectorPotentialGradient_;	/* TurbulenceService.h:6266 */
struct __turb1__GetPressureGradient_;	/* TurbulenceService.h:6321 */
struct __turb1__GetDensityGradient_;	/* TurbulenceService.h:6376 */
struct __turb1__GetTemperatureGradient_;	/* TurbulenceService.h:6431 */
struct __turb1__GetVelocityHessian_;	/* TurbulenceService.h:6486 */
struct __turb1__GetMagneticHessian_;	/* TurbulenceService.h:6541 */
struct __turb1__GetVectorPotentialHessian_;	/* TurbulenceService.h:6596 */
struct __turb1__GetPressureHessian_;	/* TurbulenceService.h:6651 */
struct __turb1__GetDensityHessian_;	/* TurbulenceService.h:6706 */
struct __turb1__GetTemperatureHessian_;	/* TurbulenceService.h:6761 */
struct __turb1__GetVelocityLaplacian_;	/* TurbulenceService.h:6816 */
struct __turb1__GetMagneticFieldLaplacian_;	/* TurbulenceService.h:6871 */
struct __turb1__GetVectorPotentialLaplacian_;	/* TurbulenceService.h:6926 */
struct __turb1__GetPosition_;	/* TurbulenceService.h:6982 */
struct __turb1__GetThreshold_;	/* TurbulenceService.h:7037 */
struct __turb1__GetForce_;	/* TurbulenceService.h:7092 */
struct __turb1__GetInvariant_;	/* TurbulenceService.h:7147 */
struct __turb1__GetBoxFilter_;	/* TurbulenceService.h:7202 */
struct __turb1__GetBoxFilterSGS_;	/* TurbulenceService.h:7259 */
struct __turb1__GetBoxFilterSGSsymtensor_;	/* TurbulenceService.h:7316 */
struct __turb1__GetBoxFilterSGStensor_;	/* TurbulenceService.h:7371 */
struct __turb1__GetBoxFilterSGSvector_;	/* TurbulenceService.h:7427 */
struct __turb1__GetBoxFilterSGSscalar_;	/* TurbulenceService.h:7482 */
struct __turb1__GetBoxFilterGradient_;	/* TurbulenceService.h:7537 */
struct __turb1__GetLaplacianOfGradient_;	/* TurbulenceService.h:7593 */
struct __turb1__GetVelocityBatch_;	/* TurbulenceService.h:7649 */
struct __turb1__GetRawVelocity_;	/* TurbulenceService.h:7705 */
struct __turb1__GetRawMagneticField_;	/* TurbulenceService.h:7761 */
struct __turb1__GetRawVectorPotential_;	/* TurbulenceService.h:7817 */
struct __turb1__GetRawPressure_;	/* TurbulenceService.h:7873 */
struct __turb1__GetRawDensity_;	/* TurbulenceService.h:7929 */
struct __turb1__GetRawTemperature_;	/* TurbulenceService.h:7985 */
struct __turb1__GetAnyCutoutWeb_;	/* TurbulenceService.h:8041 */
struct __turb1__GetData_USCOREPython_;	/* TurbulenceService.h:8096 */
struct __turb1__GetFilter_USCOREPython_;	/* TurbulenceService.h:8151 */
struct __turb1__GetPosition_USCOREPython_;	/* TurbulenceService.h:8206 */
struct __turb1__GetThreshold_USCOREPython_;	/* TurbulenceService.h:8261 */

/* TurbulenceService.h:131 */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* base64Binary schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of XSD type xsd:string */
	char *type;	/* optional element of XSD type xsd:string */
	char *options;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:210 */
#ifndef SOAP_TYPE_turb1__ArrayOfPoint3
#define SOAP_TYPE_turb1__ArrayOfPoint3 (13)
/* turb1:ArrayOfPoint3 complex type: */
struct turb1__ArrayOfPoint3
{
	int __sizePoint3;	/* sequence of elements <Point3> of XSD type turb1:Point3 */
	struct turb1__Point3 *Point3;
};
#endif

/* TurbulenceService.h:214 */
#ifndef SOAP_TYPE_turb1__Point3
#define SOAP_TYPE_turb1__Point3 (14)
/* turb1:Point3 complex type: */
struct turb1__Point3
{
	float x;	/* required element of XSD type xsd:float */
	float y;	/* required element of XSD type xsd:float */
	float z;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:244 */
#ifndef SOAP_TYPE_turb1__ArrayOfVector3
#define SOAP_TYPE_turb1__ArrayOfVector3 (17)
/* turb1:ArrayOfVector3 complex type: */
struct turb1__ArrayOfVector3
{
	int __sizeVector3;	/* sequence of elements <Vector3> of XSD type turb1:Vector3 */
	struct turb1__Vector3 *Vector3;
};
#endif

/* TurbulenceService.h:248 */
#ifndef SOAP_TYPE_turb1__Vector3
#define SOAP_TYPE_turb1__Vector3 (18)
/* turb1:Vector3 complex type: */
struct turb1__Vector3
{
	float x;	/* required element of XSD type xsd:float */
	float y;	/* required element of XSD type xsd:float */
	float z;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:278 */
#ifndef SOAP_TYPE_turb1__ArrayOfPressure
#define SOAP_TYPE_turb1__ArrayOfPressure (20)
/* turb1:ArrayOfPressure complex type: */
struct turb1__ArrayOfPressure
{
	int __sizePressure;	/* sequence of elements <Pressure> of XSD type turb1:Pressure */
	struct turb1__Pressure *Pressure;
};
#endif

/* TurbulenceService.h:282 */
#ifndef SOAP_TYPE_turb1__Pressure
#define SOAP_TYPE_turb1__Pressure (21)
/* turb1:Pressure complex type: */
struct turb1__Pressure
{
	float p;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:308 */
#ifndef SOAP_TYPE_turb1__ArrayOfVector3P
#define SOAP_TYPE_turb1__ArrayOfVector3P (23)
/* turb1:ArrayOfVector3P complex type: */
struct turb1__ArrayOfVector3P
{
	int __sizeVector3P;	/* sequence of elements <Vector3P> of XSD type turb1:Vector3P */
	struct turb1__Vector3P *Vector3P;
};
#endif

/* TurbulenceService.h:312 */
#ifndef SOAP_TYPE_turb1__Vector3P
#define SOAP_TYPE_turb1__Vector3P (24)
/* turb1:Vector3P complex type: */
struct turb1__Vector3P
{
	float x;	/* required element of XSD type xsd:float */
	float y;	/* required element of XSD type xsd:float */
	float z;	/* required element of XSD type xsd:float */
	float p;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:344 */
#ifndef SOAP_TYPE_turb1__ArrayOfVelocityGradient
#define SOAP_TYPE_turb1__ArrayOfVelocityGradient (26)
/* turb1:ArrayOfVelocityGradient complex type: */
struct turb1__ArrayOfVelocityGradient
{
	int __sizeVelocityGradient;	/* sequence of elements <VelocityGradient> of XSD type turb1:VelocityGradient */
	struct turb1__VelocityGradient *VelocityGradient;
};
#endif

/* TurbulenceService.h:348 */
#ifndef SOAP_TYPE_turb1__VelocityGradient
#define SOAP_TYPE_turb1__VelocityGradient (27)
/* turb1:VelocityGradient complex type: */
struct turb1__VelocityGradient
{
	float duxdx;	/* required element of XSD type xsd:float */
	float duxdy;	/* required element of XSD type xsd:float */
	float duxdz;	/* required element of XSD type xsd:float */
	float duydx;	/* required element of XSD type xsd:float */
	float duydy;	/* required element of XSD type xsd:float */
	float duydz;	/* required element of XSD type xsd:float */
	float duzdx;	/* required element of XSD type xsd:float */
	float duzdy;	/* required element of XSD type xsd:float */
	float duzdz;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:390 */
#ifndef SOAP_TYPE_turb1__ArrayOfVelocityHessian
#define SOAP_TYPE_turb1__ArrayOfVelocityHessian (29)
/* turb1:ArrayOfVelocityHessian complex type: */
struct turb1__ArrayOfVelocityHessian
{
	int __sizeVelocityHessian;	/* sequence of elements <VelocityHessian> of XSD type turb1:VelocityHessian */
	struct turb1__VelocityHessian *VelocityHessian;
};
#endif

/* TurbulenceService.h:394 */
#ifndef SOAP_TYPE_turb1__VelocityHessian
#define SOAP_TYPE_turb1__VelocityHessian (30)
/* turb1:VelocityHessian complex type: */
struct turb1__VelocityHessian
{
	float d2uxdxdx;	/* required element of XSD type xsd:float */
	float d2uxdxdy;	/* required element of XSD type xsd:float */
	float d2uxdxdz;	/* required element of XSD type xsd:float */
	float d2uxdydy;	/* required element of XSD type xsd:float */
	float d2uxdydz;	/* required element of XSD type xsd:float */
	float d2uxdzdz;	/* required element of XSD type xsd:float */
	float d2uydxdx;	/* required element of XSD type xsd:float */
	float d2uydxdy;	/* required element of XSD type xsd:float */
	float d2uydxdz;	/* required element of XSD type xsd:float */
	float d2uydydy;	/* required element of XSD type xsd:float */
	float d2uydydz;	/* required element of XSD type xsd:float */
	float d2uydzdz;	/* required element of XSD type xsd:float */
	float d2uzdxdx;	/* required element of XSD type xsd:float */
	float d2uzdxdy;	/* required element of XSD type xsd:float */
	float d2uzdxdz;	/* required element of XSD type xsd:float */
	float d2uzdydy;	/* required element of XSD type xsd:float */
	float d2uzdydz;	/* required element of XSD type xsd:float */
	float d2uzdzdz;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:454 */
#ifndef SOAP_TYPE_turb1__ArrayOfPressureHessian
#define SOAP_TYPE_turb1__ArrayOfPressureHessian (32)
/* turb1:ArrayOfPressureHessian complex type: */
struct turb1__ArrayOfPressureHessian
{
	int __sizePressureHessian;	/* sequence of elements <PressureHessian> of XSD type turb1:PressureHessian */
	struct turb1__PressureHessian *PressureHessian;
};
#endif

/* TurbulenceService.h:458 */
#ifndef SOAP_TYPE_turb1__PressureHessian
#define SOAP_TYPE_turb1__PressureHessian (33)
/* turb1:PressureHessian complex type: */
struct turb1__PressureHessian
{
	float d2pdxdx;	/* required element of XSD type xsd:float */
	float d2pdxdy;	/* required element of XSD type xsd:float */
	float d2pdxdz;	/* required element of XSD type xsd:float */
	float d2pdydy;	/* required element of XSD type xsd:float */
	float d2pdydz;	/* required element of XSD type xsd:float */
	float d2pdzdz;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:494 */
#ifndef SOAP_TYPE_turb1__ArrayOfThresholdInfo
#define SOAP_TYPE_turb1__ArrayOfThresholdInfo (35)
/* turb1:ArrayOfThresholdInfo complex type: */
struct turb1__ArrayOfThresholdInfo
{
	int __sizeThresholdInfo;	/* sequence of elements <ThresholdInfo> of XSD type turb1:ThresholdInfo */
	struct turb1__ThresholdInfo *ThresholdInfo;
};
#endif

/* TurbulenceService.h:498 */
#ifndef SOAP_TYPE_turb1__ThresholdInfo
#define SOAP_TYPE_turb1__ThresholdInfo (36)
/* turb1:ThresholdInfo complex type: */
struct turb1__ThresholdInfo
{
	int x;	/* required element of XSD type xsd:int */
	int y;	/* required element of XSD type xsd:int */
	int z;	/* required element of XSD type xsd:int */
	float value;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:530 */
#ifndef SOAP_TYPE_turb1__ArrayOfSGSTensor
#define SOAP_TYPE_turb1__ArrayOfSGSTensor (38)
/* turb1:ArrayOfSGSTensor complex type: */
struct turb1__ArrayOfSGSTensor
{
	int __sizeSGSTensor;	/* sequence of elements <SGSTensor> of XSD type turb1:SGSTensor */
	struct turb1__SGSTensor *SGSTensor;
};
#endif

/* TurbulenceService.h:534 */
#ifndef SOAP_TYPE_turb1__SGSTensor
#define SOAP_TYPE_turb1__SGSTensor (39)
/* turb1:SGSTensor complex type: */
struct turb1__SGSTensor
{
	float xx;	/* required element of XSD type xsd:float */
	float yy;	/* required element of XSD type xsd:float */
	float zz;	/* required element of XSD type xsd:float */
	float xy;	/* required element of XSD type xsd:float */
	float xz;	/* required element of XSD type xsd:float */
	float yz;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:570 */
#ifndef SOAP_TYPE_turb1__ArrayOfFloat
#define SOAP_TYPE_turb1__ArrayOfFloat (41)
/* turb1:ArrayOfFloat complex type: */
struct turb1__ArrayOfFloat
{
	int __sizefloat_;	/* sequence of elements <float> of XSD type xsd:float */
	float *float_;
};
#endif

/* TurbulenceService.h:586 */
#ifndef SOAP_TYPE_turb1__ArrayOfArrayOfFloat
#define SOAP_TYPE_turb1__ArrayOfArrayOfFloat (43)
/* turb1:ArrayOfArrayOfFloat complex type: */
struct turb1__ArrayOfArrayOfFloat
{
	int __sizeArrayOfFloat;	/* sequence of elements <ArrayOfFloat> of XSD type turb1:ArrayOfFloat */
	struct turb1__ArrayOfFloat *ArrayOfFloat;
};
#endif

/* TurbulenceService.h:603 */
#ifndef SOAP_TYPE__turb1__NullOp
#define SOAP_TYPE__turb1__NullOp (45)
/* turb1:NullOp complex type: */
struct _turb1__NullOp
{
	char *authToken;	/* optional element of XSD type xsd:string */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
};
#endif

/* TurbulenceService.h:620 */
#ifndef SOAP_TYPE__turb1__NullOpResponse
#define SOAP_TYPE__turb1__NullOpResponse (47)
/* turb1:NullOpResponse complex type: */
struct _turb1__NullOpResponse
{
	struct turb1__ArrayOfVector3 *NullOpResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:635 */
#ifndef SOAP_TYPE__turb1__GetVelocity
#define SOAP_TYPE__turb1__GetVelocity (49)
/* turb1:GetVelocity complex type: */
struct _turb1__GetVelocity
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:662 */
#ifndef SOAP_TYPE__turb1__GetVelocityResponse
#define SOAP_TYPE__turb1__GetVelocityResponse (50)
/* turb1:GetVelocityResponse complex type: */
struct _turb1__GetVelocityResponse
{
	struct turb1__ArrayOfVector3 *GetVelocityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:677 */
#ifndef SOAP_TYPE__turb1__GetMagneticField
#define SOAP_TYPE__turb1__GetMagneticField (51)
/* turb1:GetMagneticField complex type: */
struct _turb1__GetMagneticField
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:704 */
#ifndef SOAP_TYPE__turb1__GetMagneticFieldResponse
#define SOAP_TYPE__turb1__GetMagneticFieldResponse (52)
/* turb1:GetMagneticFieldResponse complex type: */
struct _turb1__GetMagneticFieldResponse
{
	struct turb1__ArrayOfVector3 *GetMagneticFieldResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:719 */
#ifndef SOAP_TYPE__turb1__GetVectorPotential
#define SOAP_TYPE__turb1__GetVectorPotential (53)
/* turb1:GetVectorPotential complex type: */
struct _turb1__GetVectorPotential
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:746 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialResponse
#define SOAP_TYPE__turb1__GetVectorPotentialResponse (54)
/* turb1:GetVectorPotentialResponse complex type: */
struct _turb1__GetVectorPotentialResponse
{
	struct turb1__ArrayOfVector3 *GetVectorPotentialResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:761 */
#ifndef SOAP_TYPE__turb1__GetPressure
#define SOAP_TYPE__turb1__GetPressure (55)
/* turb1:GetPressure complex type: */
struct _turb1__GetPressure
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:788 */
#ifndef SOAP_TYPE__turb1__GetPressureResponse
#define SOAP_TYPE__turb1__GetPressureResponse (56)
/* turb1:GetPressureResponse complex type: */
struct _turb1__GetPressureResponse
{
	struct turb1__ArrayOfPressure *GetPressureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPressure */
};
#endif

/* TurbulenceService.h:803 */
#ifndef SOAP_TYPE__turb1__GetDensity
#define SOAP_TYPE__turb1__GetDensity (58)
/* turb1:GetDensity complex type: */
struct _turb1__GetDensity
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:830 */
#ifndef SOAP_TYPE__turb1__GetDensityResponse
#define SOAP_TYPE__turb1__GetDensityResponse (59)
/* turb1:GetDensityResponse complex type: */
struct _turb1__GetDensityResponse
{
	struct turb1__ArrayOfPressure *GetDensityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPressure */
};
#endif

/* TurbulenceService.h:845 */
#ifndef SOAP_TYPE__turb1__GetTemperature
#define SOAP_TYPE__turb1__GetTemperature (60)
/* turb1:GetTemperature complex type: */
struct _turb1__GetTemperature
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:872 */
#ifndef SOAP_TYPE__turb1__GetTemperatureResponse
#define SOAP_TYPE__turb1__GetTemperatureResponse (61)
/* turb1:GetTemperatureResponse complex type: */
struct _turb1__GetTemperatureResponse
{
	struct turb1__ArrayOfPressure *GetTemperatureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPressure */
};
#endif

/* TurbulenceService.h:887 */
#ifndef SOAP_TYPE__turb1__GetVelocityAndPressure
#define SOAP_TYPE__turb1__GetVelocityAndPressure (62)
/* turb1:GetVelocityAndPressure complex type: */
struct _turb1__GetVelocityAndPressure
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:914 */
#ifndef SOAP_TYPE__turb1__GetVelocityAndPressureResponse
#define SOAP_TYPE__turb1__GetVelocityAndPressureResponse (63)
/* turb1:GetVelocityAndPressureResponse complex type: */
struct _turb1__GetVelocityAndPressureResponse
{
	struct turb1__ArrayOfVector3P *GetVelocityAndPressureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3P */
};
#endif

/* TurbulenceService.h:929 */
#ifndef SOAP_TYPE__turb1__GetVelocityAndTemperature
#define SOAP_TYPE__turb1__GetVelocityAndTemperature (65)
/* turb1:GetVelocityAndTemperature complex type: */
struct _turb1__GetVelocityAndTemperature
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:956 */
#ifndef SOAP_TYPE__turb1__GetVelocityAndTemperatureResponse
#define SOAP_TYPE__turb1__GetVelocityAndTemperatureResponse (66)
/* turb1:GetVelocityAndTemperatureResponse complex type: */
struct _turb1__GetVelocityAndTemperatureResponse
{
	struct turb1__ArrayOfVector3P *GetVelocityAndTemperatureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3P */
};
#endif

/* TurbulenceService.h:971 */
#ifndef SOAP_TYPE__turb1__GetVelocityGradient
#define SOAP_TYPE__turb1__GetVelocityGradient (67)
/* turb1:GetVelocityGradient complex type: */
struct _turb1__GetVelocityGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:998 */
#ifndef SOAP_TYPE__turb1__GetVelocityGradientResponse
#define SOAP_TYPE__turb1__GetVelocityGradientResponse (68)
/* turb1:GetVelocityGradientResponse complex type: */
struct _turb1__GetVelocityGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetVelocityGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityGradient */
};
#endif

/* TurbulenceService.h:1013 */
#ifndef SOAP_TYPE__turb1__GetMagneticFieldGradient
#define SOAP_TYPE__turb1__GetMagneticFieldGradient (70)
/* turb1:GetMagneticFieldGradient complex type: */
struct _turb1__GetMagneticFieldGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1040 */
#ifndef SOAP_TYPE__turb1__GetMagneticFieldGradientResponse
#define SOAP_TYPE__turb1__GetMagneticFieldGradientResponse (71)
/* turb1:GetMagneticFieldGradientResponse complex type: */
struct _turb1__GetMagneticFieldGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetMagneticFieldGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityGradient */
};
#endif

/* TurbulenceService.h:1055 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialGradient
#define SOAP_TYPE__turb1__GetVectorPotentialGradient (72)
/* turb1:GetVectorPotentialGradient complex type: */
struct _turb1__GetVectorPotentialGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1082 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialGradientResponse
#define SOAP_TYPE__turb1__GetVectorPotentialGradientResponse (73)
/* turb1:GetVectorPotentialGradientResponse complex type: */
struct _turb1__GetVectorPotentialGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetVectorPotentialGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityGradient */
};
#endif

/* TurbulenceService.h:1097 */
#ifndef SOAP_TYPE__turb1__GetPressureGradient
#define SOAP_TYPE__turb1__GetPressureGradient (74)
/* turb1:GetPressureGradient complex type: */
struct _turb1__GetPressureGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1124 */
#ifndef SOAP_TYPE__turb1__GetPressureGradientResponse
#define SOAP_TYPE__turb1__GetPressureGradientResponse (75)
/* turb1:GetPressureGradientResponse complex type: */
struct _turb1__GetPressureGradientResponse
{
	struct turb1__ArrayOfVector3 *GetPressureGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1139 */
#ifndef SOAP_TYPE__turb1__GetDensityGradient
#define SOAP_TYPE__turb1__GetDensityGradient (76)
/* turb1:GetDensityGradient complex type: */
struct _turb1__GetDensityGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1166 */
#ifndef SOAP_TYPE__turb1__GetDensityGradientResponse
#define SOAP_TYPE__turb1__GetDensityGradientResponse (77)
/* turb1:GetDensityGradientResponse complex type: */
struct _turb1__GetDensityGradientResponse
{
	struct turb1__ArrayOfVector3 *GetDensityGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1181 */
#ifndef SOAP_TYPE__turb1__GetTemperatureGradient
#define SOAP_TYPE__turb1__GetTemperatureGradient (78)
/* turb1:GetTemperatureGradient complex type: */
struct _turb1__GetTemperatureGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1208 */
#ifndef SOAP_TYPE__turb1__GetTemperatureGradientResponse
#define SOAP_TYPE__turb1__GetTemperatureGradientResponse (79)
/* turb1:GetTemperatureGradientResponse complex type: */
struct _turb1__GetTemperatureGradientResponse
{
	struct turb1__ArrayOfVector3 *GetTemperatureGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1223 */
#ifndef SOAP_TYPE__turb1__GetVelocityHessian
#define SOAP_TYPE__turb1__GetVelocityHessian (80)
/* turb1:GetVelocityHessian complex type: */
struct _turb1__GetVelocityHessian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1250 */
#ifndef SOAP_TYPE__turb1__GetVelocityHessianResponse
#define SOAP_TYPE__turb1__GetVelocityHessianResponse (81)
/* turb1:GetVelocityHessianResponse complex type: */
struct _turb1__GetVelocityHessianResponse
{
	struct turb1__ArrayOfVelocityHessian *GetVelocityHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityHessian */
};
#endif

/* TurbulenceService.h:1265 */
#ifndef SOAP_TYPE__turb1__GetMagneticHessian
#define SOAP_TYPE__turb1__GetMagneticHessian (83)
/* turb1:GetMagneticHessian complex type: */
struct _turb1__GetMagneticHessian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1292 */
#ifndef SOAP_TYPE__turb1__GetMagneticHessianResponse
#define SOAP_TYPE__turb1__GetMagneticHessianResponse (84)
/* turb1:GetMagneticHessianResponse complex type: */
struct _turb1__GetMagneticHessianResponse
{
	struct turb1__ArrayOfVelocityHessian *GetMagneticHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityHessian */
};
#endif

/* TurbulenceService.h:1307 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialHessian
#define SOAP_TYPE__turb1__GetVectorPotentialHessian (85)
/* turb1:GetVectorPotentialHessian complex type: */
struct _turb1__GetVectorPotentialHessian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1334 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialHessianResponse
#define SOAP_TYPE__turb1__GetVectorPotentialHessianResponse (86)
/* turb1:GetVectorPotentialHessianResponse complex type: */
struct _turb1__GetVectorPotentialHessianResponse
{
	struct turb1__ArrayOfVelocityHessian *GetVectorPotentialHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityHessian */
};
#endif

/* TurbulenceService.h:1349 */
#ifndef SOAP_TYPE__turb1__GetPressureHessian
#define SOAP_TYPE__turb1__GetPressureHessian (87)
/* turb1:GetPressureHessian complex type: */
struct _turb1__GetPressureHessian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1376 */
#ifndef SOAP_TYPE__turb1__GetPressureHessianResponse
#define SOAP_TYPE__turb1__GetPressureHessianResponse (88)
/* turb1:GetPressureHessianResponse complex type: */
struct _turb1__GetPressureHessianResponse
{
	struct turb1__ArrayOfPressureHessian *GetPressureHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPressureHessian */
};
#endif

/* TurbulenceService.h:1391 */
#ifndef SOAP_TYPE__turb1__GetDensityHessian
#define SOAP_TYPE__turb1__GetDensityHessian (90)
/* turb1:GetDensityHessian complex type: */
struct _turb1__GetDensityHessian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1418 */
#ifndef SOAP_TYPE__turb1__GetDensityHessianResponse
#define SOAP_TYPE__turb1__GetDensityHessianResponse (91)
/* turb1:GetDensityHessianResponse complex type: */
struct _turb1__GetDensityHessianResponse
{
	struct turb1__ArrayOfPressureHessian *GetDensityHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPressureHessian */
};
#endif

/* TurbulenceService.h:1433 */
#ifndef SOAP_TYPE__turb1__GetTemperatureHessian
#define SOAP_TYPE__turb1__GetTemperatureHessian (92)
/* turb1:GetTemperatureHessian complex type: */
struct _turb1__GetTemperatureHessian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1460 */
#ifndef SOAP_TYPE__turb1__GetTemperatureHessianResponse
#define SOAP_TYPE__turb1__GetTemperatureHessianResponse (93)
/* turb1:GetTemperatureHessianResponse complex type: */
struct _turb1__GetTemperatureHessianResponse
{
	struct turb1__ArrayOfPressureHessian *GetTemperatureHessianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPressureHessian */
};
#endif

/* TurbulenceService.h:1475 */
#ifndef SOAP_TYPE__turb1__GetVelocityLaplacian
#define SOAP_TYPE__turb1__GetVelocityLaplacian (94)
/* turb1:GetVelocityLaplacian complex type: */
struct _turb1__GetVelocityLaplacian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1502 */
#ifndef SOAP_TYPE__turb1__GetVelocityLaplacianResponse
#define SOAP_TYPE__turb1__GetVelocityLaplacianResponse (95)
/* turb1:GetVelocityLaplacianResponse complex type: */
struct _turb1__GetVelocityLaplacianResponse
{
	struct turb1__ArrayOfVector3 *GetVelocityLaplacianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1517 */
#ifndef SOAP_TYPE__turb1__GetMagneticFieldLaplacian
#define SOAP_TYPE__turb1__GetMagneticFieldLaplacian (96)
/* turb1:GetMagneticFieldLaplacian complex type: */
struct _turb1__GetMagneticFieldLaplacian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1544 */
#ifndef SOAP_TYPE__turb1__GetMagneticFieldLaplacianResponse
#define SOAP_TYPE__turb1__GetMagneticFieldLaplacianResponse (97)
/* turb1:GetMagneticFieldLaplacianResponse complex type: */
struct _turb1__GetMagneticFieldLaplacianResponse
{
	struct turb1__ArrayOfVector3 *GetMagneticFieldLaplacianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1559 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialLaplacian
#define SOAP_TYPE__turb1__GetVectorPotentialLaplacian (98)
/* turb1:GetVectorPotentialLaplacian complex type: */
struct _turb1__GetVectorPotentialLaplacian
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1586 */
#ifndef SOAP_TYPE__turb1__GetVectorPotentialLaplacianResponse
#define SOAP_TYPE__turb1__GetVectorPotentialLaplacianResponse (99)
/* turb1:GetVectorPotentialLaplacianResponse complex type: */
struct _turb1__GetVectorPotentialLaplacianResponse
{
	struct turb1__ArrayOfVector3 *GetVectorPotentialLaplacianResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1601 */
#ifndef SOAP_TYPE__turb1__GetPosition
#define SOAP_TYPE__turb1__GetPosition (100)
/* turb1:GetPosition complex type: */
struct _turb1__GetPosition
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float StartTime;	/* required element of XSD type xsd:float */
	float EndTime;	/* required element of XSD type xsd:float */
	float dt;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1630 */
#ifndef SOAP_TYPE__turb1__GetPositionResponse
#define SOAP_TYPE__turb1__GetPositionResponse (101)
/* turb1:GetPositionResponse complex type: */
struct _turb1__GetPositionResponse
{
	struct turb1__ArrayOfPoint3 *GetPositionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfPoint3 */
};
#endif

/* TurbulenceService.h:1645 */
#ifndef SOAP_TYPE__turb1__GetThreshold
#define SOAP_TYPE__turb1__GetThreshold (102)
/* turb1:GetThreshold complex type: */
struct _turb1__GetThreshold
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float threshold;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	int x_USCOREstart;	/* required element of XSD type xsd:int */
	int y_USCOREstart;	/* required element of XSD type xsd:int */
	int z_USCOREstart;	/* required element of XSD type xsd:int */
	int x_USCOREend;	/* required element of XSD type xsd:int */
	int y_USCOREend;	/* required element of XSD type xsd:int */
	int z_USCOREend;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1684 */
#ifndef SOAP_TYPE__turb1__GetThresholdResponse
#define SOAP_TYPE__turb1__GetThresholdResponse (103)
/* turb1:GetThresholdResponse complex type: */
struct _turb1__GetThresholdResponse
{
	struct turb1__ArrayOfThresholdInfo *GetThresholdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfThresholdInfo */
};
#endif

/* TurbulenceService.h:1699 */
#ifndef SOAP_TYPE__turb1__GetForce
#define SOAP_TYPE__turb1__GetForce (105)
/* turb1:GetForce complex type: */
struct _turb1__GetForce
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1726 */
#ifndef SOAP_TYPE__turb1__GetForceResponse
#define SOAP_TYPE__turb1__GetForceResponse (106)
/* turb1:GetForceResponse complex type: */
struct _turb1__GetForceResponse
{
	struct turb1__ArrayOfVector3 *GetForceResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1741 */
#ifndef SOAP_TYPE__turb1__GetInvariant
#define SOAP_TYPE__turb1__GetInvariant (107)
/* turb1:GetInvariant complex type: */
struct _turb1__GetInvariant
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1768 */
#ifndef SOAP_TYPE__turb1__GetInvariantResponse
#define SOAP_TYPE__turb1__GetInvariantResponse (108)
/* turb1:GetInvariantResponse complex type: */
struct _turb1__GetInvariantResponse
{
	struct turb1__ArrayOfVector3 *GetInvariantResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1783 */
#ifndef SOAP_TYPE__turb1__GetBoxFilter
#define SOAP_TYPE__turb1__GetBoxFilter (109)
/* turb1:GetBoxFilter complex type: */
struct _turb1__GetBoxFilter
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1810 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterResponse
#define SOAP_TYPE__turb1__GetBoxFilterResponse (110)
/* turb1:GetBoxFilterResponse complex type: */
struct _turb1__GetBoxFilterResponse
{
	struct turb1__ArrayOfVector3 *GetBoxFilterResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1825 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGS
#define SOAP_TYPE__turb1__GetBoxFilterSGS (111)
/* turb1:GetBoxFilterSGS complex type: */
struct _turb1__GetBoxFilterSGS
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1852 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSResponse
#define SOAP_TYPE__turb1__GetBoxFilterSGSResponse (112)
/* turb1:GetBoxFilterSGSResponse complex type: */
struct _turb1__GetBoxFilterSGSResponse
{
	struct turb1__ArrayOfSGSTensor *GetBoxFilterSGSResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfSGSTensor */
};
#endif

/* TurbulenceService.h:1867 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSsymtensor
#define SOAP_TYPE__turb1__GetBoxFilterSGSsymtensor (114)
/* turb1:GetBoxFilterSGSsymtensor complex type: */
struct _turb1__GetBoxFilterSGSsymtensor
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1894 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSsymtensorResponse
#define SOAP_TYPE__turb1__GetBoxFilterSGSsymtensorResponse (115)
/* turb1:GetBoxFilterSGSsymtensorResponse complex type: */
struct _turb1__GetBoxFilterSGSsymtensorResponse
{
	struct turb1__ArrayOfSGSTensor *GetBoxFilterSGSsymtensorResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfSGSTensor */
};
#endif

/* TurbulenceService.h:1909 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGStensor
#define SOAP_TYPE__turb1__GetBoxFilterSGStensor (116)
/* turb1:GetBoxFilterSGStensor complex type: */
struct _turb1__GetBoxFilterSGStensor
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1936 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGStensorResponse
#define SOAP_TYPE__turb1__GetBoxFilterSGStensorResponse (117)
/* turb1:GetBoxFilterSGStensorResponse complex type: */
struct _turb1__GetBoxFilterSGStensorResponse
{
	struct turb1__ArrayOfVelocityGradient *GetBoxFilterSGStensorResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityGradient */
};
#endif

/* TurbulenceService.h:1951 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSvector
#define SOAP_TYPE__turb1__GetBoxFilterSGSvector (118)
/* turb1:GetBoxFilterSGSvector complex type: */
struct _turb1__GetBoxFilterSGSvector
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:1978 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSvectorResponse
#define SOAP_TYPE__turb1__GetBoxFilterSGSvectorResponse (119)
/* turb1:GetBoxFilterSGSvectorResponse complex type: */
struct _turb1__GetBoxFilterSGSvectorResponse
{
	struct turb1__ArrayOfVector3 *GetBoxFilterSGSvectorResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:1993 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSscalar
#define SOAP_TYPE__turb1__GetBoxFilterSGSscalar (120)
/* turb1:GetBoxFilterSGSscalar complex type: */
struct _turb1__GetBoxFilterSGSscalar
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2020 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterSGSscalarResponse
#define SOAP_TYPE__turb1__GetBoxFilterSGSscalarResponse (121)
/* turb1:GetBoxFilterSGSscalarResponse complex type: */
struct _turb1__GetBoxFilterSGSscalarResponse
{
	struct turb1__ArrayOfFloat *GetBoxFilterSGSscalarResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfFloat */
};
#endif

/* TurbulenceService.h:2035 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterGradient
#define SOAP_TYPE__turb1__GetBoxFilterGradient (122)
/* turb1:GetBoxFilterGradient complex type: */
struct _turb1__GetBoxFilterGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	float spacing;	/* required element of XSD type xsd:float */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2064 */
#ifndef SOAP_TYPE__turb1__GetBoxFilterGradientResponse
#define SOAP_TYPE__turb1__GetBoxFilterGradientResponse (123)
/* turb1:GetBoxFilterGradientResponse complex type: */
struct _turb1__GetBoxFilterGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetBoxFilterGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityGradient */
};
#endif

/* TurbulenceService.h:2079 */
#ifndef SOAP_TYPE__turb1__GetLaplacianOfGradient
#define SOAP_TYPE__turb1__GetLaplacianOfGradient (124)
/* turb1:GetLaplacianOfGradient complex type: */
struct _turb1__GetLaplacianOfGradient
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2108 */
#ifndef SOAP_TYPE__turb1__GetLaplacianOfGradientResponse
#define SOAP_TYPE__turb1__GetLaplacianOfGradientResponse (125)
/* turb1:GetLaplacianOfGradientResponse complex type: */
struct _turb1__GetLaplacianOfGradientResponse
{
	struct turb1__ArrayOfVelocityGradient *GetLaplacianOfGradientResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVelocityGradient */
};
#endif

/* TurbulenceService.h:2123 */
#ifndef SOAP_TYPE__turb1__GetVelocityBatch
#define SOAP_TYPE__turb1__GetVelocityBatch (126)
/* turb1:GetVelocityBatch complex type: */
struct _turb1__GetVelocityBatch
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfPoint3 *points;	/* optional element of XSD type turb1:ArrayOfPoint3 */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2150 */
#ifndef SOAP_TYPE__turb1__GetVelocityBatchResponse
#define SOAP_TYPE__turb1__GetVelocityBatchResponse (127)
/* turb1:GetVelocityBatchResponse complex type: */
struct _turb1__GetVelocityBatchResponse
{
	struct turb1__ArrayOfVector3 *GetVelocityBatchResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfVector3 */
};
#endif

/* TurbulenceService.h:2165 */
#ifndef SOAP_TYPE__turb1__GetRawVelocity
#define SOAP_TYPE__turb1__GetRawVelocity (128)
/* turb1:GetRawVelocity complex type: */
struct _turb1__GetRawVelocity
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int X;	/* required element of XSD type xsd:int */
	int Y;	/* required element of XSD type xsd:int */
	int Z;	/* required element of XSD type xsd:int */
	int Xwidth;	/* required element of XSD type xsd:int */
	int Ywidth;	/* required element of XSD type xsd:int */
	int Zwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2198 */
#ifndef SOAP_TYPE__turb1__GetRawVelocityResponse
#define SOAP_TYPE__turb1__GetRawVelocityResponse (129)
/* turb1:GetRawVelocityResponse complex type: */
struct _turb1__GetRawVelocityResponse
{
	struct xsd__base64Binary GetRawVelocityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2213 */
#ifndef SOAP_TYPE__turb1__GetRawMagneticField
#define SOAP_TYPE__turb1__GetRawMagneticField (130)
/* turb1:GetRawMagneticField complex type: */
struct _turb1__GetRawMagneticField
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int X;	/* required element of XSD type xsd:int */
	int Y;	/* required element of XSD type xsd:int */
	int Z;	/* required element of XSD type xsd:int */
	int Xwidth;	/* required element of XSD type xsd:int */
	int Ywidth;	/* required element of XSD type xsd:int */
	int Zwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2246 */
#ifndef SOAP_TYPE__turb1__GetRawMagneticFieldResponse
#define SOAP_TYPE__turb1__GetRawMagneticFieldResponse (131)
/* turb1:GetRawMagneticFieldResponse complex type: */
struct _turb1__GetRawMagneticFieldResponse
{
	struct xsd__base64Binary GetRawMagneticFieldResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2261 */
#ifndef SOAP_TYPE__turb1__GetRawVectorPotential
#define SOAP_TYPE__turb1__GetRawVectorPotential (132)
/* turb1:GetRawVectorPotential complex type: */
struct _turb1__GetRawVectorPotential
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int X;	/* required element of XSD type xsd:int */
	int Y;	/* required element of XSD type xsd:int */
	int Z;	/* required element of XSD type xsd:int */
	int Xwidth;	/* required element of XSD type xsd:int */
	int Ywidth;	/* required element of XSD type xsd:int */
	int Zwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2294 */
#ifndef SOAP_TYPE__turb1__GetRawVectorPotentialResponse
#define SOAP_TYPE__turb1__GetRawVectorPotentialResponse (133)
/* turb1:GetRawVectorPotentialResponse complex type: */
struct _turb1__GetRawVectorPotentialResponse
{
	struct xsd__base64Binary GetRawVectorPotentialResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2309 */
#ifndef SOAP_TYPE__turb1__GetRawPressure
#define SOAP_TYPE__turb1__GetRawPressure (134)
/* turb1:GetRawPressure complex type: */
struct _turb1__GetRawPressure
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int X;	/* required element of XSD type xsd:int */
	int Y;	/* required element of XSD type xsd:int */
	int Z;	/* required element of XSD type xsd:int */
	int Xwidth;	/* required element of XSD type xsd:int */
	int Ywidth;	/* required element of XSD type xsd:int */
	int Zwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2342 */
#ifndef SOAP_TYPE__turb1__GetRawPressureResponse
#define SOAP_TYPE__turb1__GetRawPressureResponse (135)
/* turb1:GetRawPressureResponse complex type: */
struct _turb1__GetRawPressureResponse
{
	struct xsd__base64Binary GetRawPressureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2357 */
#ifndef SOAP_TYPE__turb1__GetRawDensity
#define SOAP_TYPE__turb1__GetRawDensity (136)
/* turb1:GetRawDensity complex type: */
struct _turb1__GetRawDensity
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int X;	/* required element of XSD type xsd:int */
	int Y;	/* required element of XSD type xsd:int */
	int Z;	/* required element of XSD type xsd:int */
	int Xwidth;	/* required element of XSD type xsd:int */
	int Ywidth;	/* required element of XSD type xsd:int */
	int Zwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2390 */
#ifndef SOAP_TYPE__turb1__GetRawDensityResponse
#define SOAP_TYPE__turb1__GetRawDensityResponse (137)
/* turb1:GetRawDensityResponse complex type: */
struct _turb1__GetRawDensityResponse
{
	struct xsd__base64Binary GetRawDensityResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2405 */
#ifndef SOAP_TYPE__turb1__GetRawTemperature
#define SOAP_TYPE__turb1__GetRawTemperature (138)
/* turb1:GetRawTemperature complex type: */
struct _turb1__GetRawTemperature
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int X;	/* required element of XSD type xsd:int */
	int Y;	/* required element of XSD type xsd:int */
	int Z;	/* required element of XSD type xsd:int */
	int Xwidth;	/* required element of XSD type xsd:int */
	int Ywidth;	/* required element of XSD type xsd:int */
	int Zwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2438 */
#ifndef SOAP_TYPE__turb1__GetRawTemperatureResponse
#define SOAP_TYPE__turb1__GetRawTemperatureResponse (139)
/* turb1:GetRawTemperatureResponse complex type: */
struct _turb1__GetRawTemperatureResponse
{
	struct xsd__base64Binary GetRawTemperatureResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2453 */
#ifndef SOAP_TYPE__turb1__GetAnyCutoutWeb
#define SOAP_TYPE__turb1__GetAnyCutoutWeb (140)
/* turb1:GetAnyCutoutWeb complex type: */
struct _turb1__GetAnyCutoutWeb
{
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	int T;	/* required element of XSD type xsd:int */
	int x_USCOREstart;	/* required element of XSD type xsd:int */
	int y_USCOREstart;	/* required element of XSD type xsd:int */
	int z_USCOREstart;	/* required element of XSD type xsd:int */
	int x_USCOREend;	/* required element of XSD type xsd:int */
	int y_USCOREend;	/* required element of XSD type xsd:int */
	int z_USCOREend;	/* required element of XSD type xsd:int */
	int x_USCOREstep;	/* required element of XSD type xsd:int */
	int y_USCOREstep;	/* required element of XSD type xsd:int */
	int z_USCOREstep;	/* required element of XSD type xsd:int */
	int filter_USCOREwidth;	/* required element of XSD type xsd:int */
	char *addr;	/* optional element of XSD type xsd:string */
};
#endif

/* TurbulenceService.h:2496 */
#ifndef SOAP_TYPE__turb1__GetAnyCutoutWebResponse
#define SOAP_TYPE__turb1__GetAnyCutoutWebResponse (141)
/* turb1:GetAnyCutoutWebResponse complex type: */
struct _turb1__GetAnyCutoutWebResponse
{
	struct xsd__base64Binary GetAnyCutoutWebResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:base64Binary */
};
#endif

/* TurbulenceService.h:2511 */
#ifndef SOAP_TYPE__turb1__GetData_USCOREPython
#define SOAP_TYPE__turb1__GetData_USCOREPython (142)
/* turb1:GetData_Python complex type: */
struct _turb1__GetData_USCOREPython
{
	char *function_USCOREname;	/* optional element of XSD type xsd:string */
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	enum turb1__TemporalInterpolation temporalInterpolation;	/* required element of XSD type turb1:TemporalInterpolation */
	struct turb1__ArrayOfArrayOfFloat *points;	/* optional element of XSD type turb1:ArrayOfArrayOfFloat */
};
#endif

/* TurbulenceService.h:2538 */
#ifndef SOAP_TYPE__turb1__GetData_USCOREPythonResponse
#define SOAP_TYPE__turb1__GetData_USCOREPythonResponse (144)
/* turb1:GetData_PythonResponse complex type: */
struct _turb1__GetData_USCOREPythonResponse
{
	struct turb1__ArrayOfFloat *GetData_USCOREPythonResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfFloat */
};
#endif

/* TurbulenceService.h:2553 */
#ifndef SOAP_TYPE__turb1__GetFilter_USCOREPython
#define SOAP_TYPE__turb1__GetFilter_USCOREPython (145)
/* turb1:GetFilter_Python complex type: */
struct _turb1__GetFilter_USCOREPython
{
	char *function_USCOREname;	/* optional element of XSD type xsd:string */
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float filterwidth;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	struct turb1__ArrayOfArrayOfFloat *points;	/* optional element of XSD type turb1:ArrayOfArrayOfFloat */
	float spacing;	/* required element of XSD type xsd:float */
};
#endif

/* TurbulenceService.h:2584 */
#ifndef SOAP_TYPE__turb1__GetFilter_USCOREPythonResponse
#define SOAP_TYPE__turb1__GetFilter_USCOREPythonResponse (146)
/* turb1:GetFilter_PythonResponse complex type: */
struct _turb1__GetFilter_USCOREPythonResponse
{
	struct turb1__ArrayOfFloat *GetFilter_USCOREPythonResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfFloat */
};
#endif

/* TurbulenceService.h:2599 */
#ifndef SOAP_TYPE__turb1__GetPosition_USCOREPython
#define SOAP_TYPE__turb1__GetPosition_USCOREPython (147)
/* turb1:GetPosition_Python complex type: */
struct _turb1__GetPosition_USCOREPython
{
	char *function_USCOREname;	/* optional element of XSD type xsd:string */
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	float StartTime;	/* required element of XSD type xsd:float */
	float EndTime;	/* required element of XSD type xsd:float */
	float dt;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	struct turb1__ArrayOfArrayOfFloat *points;	/* optional element of XSD type turb1:ArrayOfArrayOfFloat */
};
#endif

/* TurbulenceService.h:2628 */
#ifndef SOAP_TYPE__turb1__GetPosition_USCOREPythonResponse
#define SOAP_TYPE__turb1__GetPosition_USCOREPythonResponse (148)
/* turb1:GetPosition_PythonResponse complex type: */
struct _turb1__GetPosition_USCOREPythonResponse
{
	struct turb1__ArrayOfFloat *GetPosition_USCOREPythonResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfFloat */
};
#endif

/* TurbulenceService.h:2643 */
#ifndef SOAP_TYPE__turb1__GetThreshold_USCOREPython
#define SOAP_TYPE__turb1__GetThreshold_USCOREPython (149)
/* turb1:GetThreshold_Python complex type: */
struct _turb1__GetThreshold_USCOREPython
{
	char *function_USCOREname;	/* optional element of XSD type xsd:string */
	char *authToken;	/* optional element of XSD type xsd:string */
	char *dataset;	/* optional element of XSD type xsd:string */
	char *field;	/* optional element of XSD type xsd:string */
	float time;	/* required element of XSD type xsd:float */
	float threshold;	/* required element of XSD type xsd:float */
	enum turb1__SpatialInterpolation spatialInterpolation;	/* required element of XSD type turb1:SpatialInterpolation */
	int x_USCOREstart;	/* required element of XSD type xsd:int */
	int y_USCOREstart;	/* required element of XSD type xsd:int */
	int z_USCOREstart;	/* required element of XSD type xsd:int */
	int x_USCOREend;	/* required element of XSD type xsd:int */
	int y_USCOREend;	/* required element of XSD type xsd:int */
	int z_USCOREend;	/* required element of XSD type xsd:int */
};
#endif

/* TurbulenceService.h:2682 */
#ifndef SOAP_TYPE__turb1__GetThreshold_USCOREPythonResponse
#define SOAP_TYPE__turb1__GetThreshold_USCOREPythonResponse (150)
/* turb1:GetThreshold_PythonResponse complex type: */
struct _turb1__GetThreshold_USCOREPythonResponse
{
	struct turb1__ArrayOfFloat *GetThreshold_USCOREPythonResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type turb1:ArrayOfFloat */
};
#endif

/* TurbulenceService.h:3006 */
#ifndef SOAP_TYPE___turb1__NullOp
#define SOAP_TYPE___turb1__NullOp (154)
/* Operation wrapper: */
struct __turb1__NullOp
{
	struct _turb1__NullOp *turb1__NullOp;	/* optional element of XSD type turb1:NullOp */
};
#endif

/* TurbulenceService.h:3061 */
#ifndef SOAP_TYPE___turb1__GetVelocity
#define SOAP_TYPE___turb1__GetVelocity (158)
/* Operation wrapper: */
struct __turb1__GetVelocity
{
	struct _turb1__GetVelocity *turb1__GetVelocity;	/* optional element of XSD type turb1:GetVelocity */
};
#endif

/* TurbulenceService.h:3116 */
#ifndef SOAP_TYPE___turb1__GetMagneticField
#define SOAP_TYPE___turb1__GetMagneticField (162)
/* Operation wrapper: */
struct __turb1__GetMagneticField
{
	struct _turb1__GetMagneticField *turb1__GetMagneticField;	/* optional element of XSD type turb1:GetMagneticField */
};
#endif

/* TurbulenceService.h:3171 */
#ifndef SOAP_TYPE___turb1__GetVectorPotential
#define SOAP_TYPE___turb1__GetVectorPotential (166)
/* Operation wrapper: */
struct __turb1__GetVectorPotential
{
	struct _turb1__GetVectorPotential *turb1__GetVectorPotential;	/* optional element of XSD type turb1:GetVectorPotential */
};
#endif

/* TurbulenceService.h:3226 */
#ifndef SOAP_TYPE___turb1__GetPressure
#define SOAP_TYPE___turb1__GetPressure (170)
/* Operation wrapper: */
struct __turb1__GetPressure
{
	struct _turb1__GetPressure *turb1__GetPressure;	/* optional element of XSD type turb1:GetPressure */
};
#endif

/* TurbulenceService.h:3281 */
#ifndef SOAP_TYPE___turb1__GetDensity
#define SOAP_TYPE___turb1__GetDensity (174)
/* Operation wrapper: */
struct __turb1__GetDensity
{
	struct _turb1__GetDensity *turb1__GetDensity;	/* optional element of XSD type turb1:GetDensity */
};
#endif

/* TurbulenceService.h:3336 */
#ifndef SOAP_TYPE___turb1__GetTemperature
#define SOAP_TYPE___turb1__GetTemperature (178)
/* Operation wrapper: */
struct __turb1__GetTemperature
{
	struct _turb1__GetTemperature *turb1__GetTemperature;	/* optional element of XSD type turb1:GetTemperature */
};
#endif

/* TurbulenceService.h:3391 */
#ifndef SOAP_TYPE___turb1__GetVelocityAndPressure
#define SOAP_TYPE___turb1__GetVelocityAndPressure (182)
/* Operation wrapper: */
struct __turb1__GetVelocityAndPressure
{
	struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure;	/* optional element of XSD type turb1:GetVelocityAndPressure */
};
#endif

/* TurbulenceService.h:3446 */
#ifndef SOAP_TYPE___turb1__GetVelocityAndTemperature
#define SOAP_TYPE___turb1__GetVelocityAndTemperature (186)
/* Operation wrapper: */
struct __turb1__GetVelocityAndTemperature
{
	struct _turb1__GetVelocityAndTemperature *turb1__GetVelocityAndTemperature;	/* optional element of XSD type turb1:GetVelocityAndTemperature */
};
#endif

/* TurbulenceService.h:3501 */
#ifndef SOAP_TYPE___turb1__GetVelocityGradient
#define SOAP_TYPE___turb1__GetVelocityGradient (190)
/* Operation wrapper: */
struct __turb1__GetVelocityGradient
{
	struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient;	/* optional element of XSD type turb1:GetVelocityGradient */
};
#endif

/* TurbulenceService.h:3556 */
#ifndef SOAP_TYPE___turb1__GetMagneticFieldGradient
#define SOAP_TYPE___turb1__GetMagneticFieldGradient (194)
/* Operation wrapper: */
struct __turb1__GetMagneticFieldGradient
{
	struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient;	/* optional element of XSD type turb1:GetMagneticFieldGradient */
};
#endif

/* TurbulenceService.h:3611 */
#ifndef SOAP_TYPE___turb1__GetVectorPotentialGradient
#define SOAP_TYPE___turb1__GetVectorPotentialGradient (198)
/* Operation wrapper: */
struct __turb1__GetVectorPotentialGradient
{
	struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient;	/* optional element of XSD type turb1:GetVectorPotentialGradient */
};
#endif

/* TurbulenceService.h:3666 */
#ifndef SOAP_TYPE___turb1__GetPressureGradient
#define SOAP_TYPE___turb1__GetPressureGradient (202)
/* Operation wrapper: */
struct __turb1__GetPressureGradient
{
	struct _turb1__GetPressureGradient *turb1__GetPressureGradient;	/* optional element of XSD type turb1:GetPressureGradient */
};
#endif

/* TurbulenceService.h:3721 */
#ifndef SOAP_TYPE___turb1__GetDensityGradient
#define SOAP_TYPE___turb1__GetDensityGradient (206)
/* Operation wrapper: */
struct __turb1__GetDensityGradient
{
	struct _turb1__GetDensityGradient *turb1__GetDensityGradient;	/* optional element of XSD type turb1:GetDensityGradient */
};
#endif

/* TurbulenceService.h:3776 */
#ifndef SOAP_TYPE___turb1__GetTemperatureGradient
#define SOAP_TYPE___turb1__GetTemperatureGradient (210)
/* Operation wrapper: */
struct __turb1__GetTemperatureGradient
{
	struct _turb1__GetTemperatureGradient *turb1__GetTemperatureGradient;	/* optional element of XSD type turb1:GetTemperatureGradient */
};
#endif

/* TurbulenceService.h:3831 */
#ifndef SOAP_TYPE___turb1__GetVelocityHessian
#define SOAP_TYPE___turb1__GetVelocityHessian (214)
/* Operation wrapper: */
struct __turb1__GetVelocityHessian
{
	struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian;	/* optional element of XSD type turb1:GetVelocityHessian */
};
#endif

/* TurbulenceService.h:3886 */
#ifndef SOAP_TYPE___turb1__GetMagneticHessian
#define SOAP_TYPE___turb1__GetMagneticHessian (218)
/* Operation wrapper: */
struct __turb1__GetMagneticHessian
{
	struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian;	/* optional element of XSD type turb1:GetMagneticHessian */
};
#endif

/* TurbulenceService.h:3941 */
#ifndef SOAP_TYPE___turb1__GetVectorPotentialHessian
#define SOAP_TYPE___turb1__GetVectorPotentialHessian (222)
/* Operation wrapper: */
struct __turb1__GetVectorPotentialHessian
{
	struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian;	/* optional element of XSD type turb1:GetVectorPotentialHessian */
};
#endif

/* TurbulenceService.h:3996 */
#ifndef SOAP_TYPE___turb1__GetPressureHessian
#define SOAP_TYPE___turb1__GetPressureHessian (226)
/* Operation wrapper: */
struct __turb1__GetPressureHessian
{
	struct _turb1__GetPressureHessian *turb1__GetPressureHessian;	/* optional element of XSD type turb1:GetPressureHessian */
};
#endif

/* TurbulenceService.h:4051 */
#ifndef SOAP_TYPE___turb1__GetDensityHessian
#define SOAP_TYPE___turb1__GetDensityHessian (230)
/* Operation wrapper: */
struct __turb1__GetDensityHessian
{
	struct _turb1__GetDensityHessian *turb1__GetDensityHessian;	/* optional element of XSD type turb1:GetDensityHessian */
};
#endif

/* TurbulenceService.h:4106 */
#ifndef SOAP_TYPE___turb1__GetTemperatureHessian
#define SOAP_TYPE___turb1__GetTemperatureHessian (234)
/* Operation wrapper: */
struct __turb1__GetTemperatureHessian
{
	struct _turb1__GetTemperatureHessian *turb1__GetTemperatureHessian;	/* optional element of XSD type turb1:GetTemperatureHessian */
};
#endif

/* TurbulenceService.h:4161 */
#ifndef SOAP_TYPE___turb1__GetVelocityLaplacian
#define SOAP_TYPE___turb1__GetVelocityLaplacian (238)
/* Operation wrapper: */
struct __turb1__GetVelocityLaplacian
{
	struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian;	/* optional element of XSD type turb1:GetVelocityLaplacian */
};
#endif

/* TurbulenceService.h:4216 */
#ifndef SOAP_TYPE___turb1__GetMagneticFieldLaplacian
#define SOAP_TYPE___turb1__GetMagneticFieldLaplacian (242)
/* Operation wrapper: */
struct __turb1__GetMagneticFieldLaplacian
{
	struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian;	/* optional element of XSD type turb1:GetMagneticFieldLaplacian */
};
#endif

/* TurbulenceService.h:4271 */
#ifndef SOAP_TYPE___turb1__GetVectorPotentialLaplacian
#define SOAP_TYPE___turb1__GetVectorPotentialLaplacian (246)
/* Operation wrapper: */
struct __turb1__GetVectorPotentialLaplacian
{
	struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian;	/* optional element of XSD type turb1:GetVectorPotentialLaplacian */
};
#endif

/* TurbulenceService.h:4327 */
#ifndef SOAP_TYPE___turb1__GetPosition
#define SOAP_TYPE___turb1__GetPosition (250)
/* Operation wrapper: */
struct __turb1__GetPosition
{
	struct _turb1__GetPosition *turb1__GetPosition;	/* optional element of XSD type turb1:GetPosition */
};
#endif

/* TurbulenceService.h:4382 */
#ifndef SOAP_TYPE___turb1__GetThreshold
#define SOAP_TYPE___turb1__GetThreshold (254)
/* Operation wrapper: */
struct __turb1__GetThreshold
{
	struct _turb1__GetThreshold *turb1__GetThreshold;	/* optional element of XSD type turb1:GetThreshold */
};
#endif

/* TurbulenceService.h:4437 */
#ifndef SOAP_TYPE___turb1__GetForce
#define SOAP_TYPE___turb1__GetForce (258)
/* Operation wrapper: */
struct __turb1__GetForce
{
	struct _turb1__GetForce *turb1__GetForce;	/* optional element of XSD type turb1:GetForce */
};
#endif

/* TurbulenceService.h:4492 */
#ifndef SOAP_TYPE___turb1__GetInvariant
#define SOAP_TYPE___turb1__GetInvariant (262)
/* Operation wrapper: */
struct __turb1__GetInvariant
{
	struct _turb1__GetInvariant *turb1__GetInvariant;	/* optional element of XSD type turb1:GetInvariant */
};
#endif

/* TurbulenceService.h:4547 */
#ifndef SOAP_TYPE___turb1__GetBoxFilter
#define SOAP_TYPE___turb1__GetBoxFilter (266)
/* Operation wrapper: */
struct __turb1__GetBoxFilter
{
	struct _turb1__GetBoxFilter *turb1__GetBoxFilter;	/* optional element of XSD type turb1:GetBoxFilter */
};
#endif

/* TurbulenceService.h:4604 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGS
#define SOAP_TYPE___turb1__GetBoxFilterSGS (270)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGS
{
	struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS;	/* optional element of XSD type turb1:GetBoxFilterSGS */
};
#endif

/* TurbulenceService.h:4661 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor
#define SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor (274)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGSsymtensor
{
	struct _turb1__GetBoxFilterSGSsymtensor *turb1__GetBoxFilterSGSsymtensor;	/* optional element of XSD type turb1:GetBoxFilterSGSsymtensor */
};
#endif

/* TurbulenceService.h:4716 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGStensor
#define SOAP_TYPE___turb1__GetBoxFilterSGStensor (278)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGStensor
{
	struct _turb1__GetBoxFilterSGStensor *turb1__GetBoxFilterSGStensor;	/* optional element of XSD type turb1:GetBoxFilterSGStensor */
};
#endif

/* TurbulenceService.h:4772 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSvector
#define SOAP_TYPE___turb1__GetBoxFilterSGSvector (282)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGSvector
{
	struct _turb1__GetBoxFilterSGSvector *turb1__GetBoxFilterSGSvector;	/* optional element of XSD type turb1:GetBoxFilterSGSvector */
};
#endif

/* TurbulenceService.h:4827 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSscalar
#define SOAP_TYPE___turb1__GetBoxFilterSGSscalar (286)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGSscalar
{
	struct _turb1__GetBoxFilterSGSscalar *turb1__GetBoxFilterSGSscalar;	/* optional element of XSD type turb1:GetBoxFilterSGSscalar */
};
#endif

/* TurbulenceService.h:4882 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterGradient
#define SOAP_TYPE___turb1__GetBoxFilterGradient (290)
/* Operation wrapper: */
struct __turb1__GetBoxFilterGradient
{
	struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient;	/* optional element of XSD type turb1:GetBoxFilterGradient */
};
#endif

/* TurbulenceService.h:4938 */
#ifndef SOAP_TYPE___turb1__GetLaplacianOfGradient
#define SOAP_TYPE___turb1__GetLaplacianOfGradient (294)
/* Operation wrapper: */
struct __turb1__GetLaplacianOfGradient
{
	struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient;	/* optional element of XSD type turb1:GetLaplacianOfGradient */
};
#endif

/* TurbulenceService.h:4994 */
#ifndef SOAP_TYPE___turb1__GetVelocityBatch
#define SOAP_TYPE___turb1__GetVelocityBatch (298)
/* Operation wrapper: */
struct __turb1__GetVelocityBatch
{
	struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch;	/* optional element of XSD type turb1:GetVelocityBatch */
};
#endif

/* TurbulenceService.h:5050 */
#ifndef SOAP_TYPE___turb1__GetRawVelocity
#define SOAP_TYPE___turb1__GetRawVelocity (302)
/* Operation wrapper: */
struct __turb1__GetRawVelocity
{
	struct _turb1__GetRawVelocity *turb1__GetRawVelocity;	/* optional element of XSD type turb1:GetRawVelocity */
};
#endif

/* TurbulenceService.h:5106 */
#ifndef SOAP_TYPE___turb1__GetRawMagneticField
#define SOAP_TYPE___turb1__GetRawMagneticField (306)
/* Operation wrapper: */
struct __turb1__GetRawMagneticField
{
	struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField;	/* optional element of XSD type turb1:GetRawMagneticField */
};
#endif

/* TurbulenceService.h:5162 */
#ifndef SOAP_TYPE___turb1__GetRawVectorPotential
#define SOAP_TYPE___turb1__GetRawVectorPotential (310)
/* Operation wrapper: */
struct __turb1__GetRawVectorPotential
{
	struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential;	/* optional element of XSD type turb1:GetRawVectorPotential */
};
#endif

/* TurbulenceService.h:5218 */
#ifndef SOAP_TYPE___turb1__GetRawPressure
#define SOAP_TYPE___turb1__GetRawPressure (314)
/* Operation wrapper: */
struct __turb1__GetRawPressure
{
	struct _turb1__GetRawPressure *turb1__GetRawPressure;	/* optional element of XSD type turb1:GetRawPressure */
};
#endif

/* TurbulenceService.h:5274 */
#ifndef SOAP_TYPE___turb1__GetRawDensity
#define SOAP_TYPE___turb1__GetRawDensity (318)
/* Operation wrapper: */
struct __turb1__GetRawDensity
{
	struct _turb1__GetRawDensity *turb1__GetRawDensity;	/* optional element of XSD type turb1:GetRawDensity */
};
#endif

/* TurbulenceService.h:5330 */
#ifndef SOAP_TYPE___turb1__GetRawTemperature
#define SOAP_TYPE___turb1__GetRawTemperature (322)
/* Operation wrapper: */
struct __turb1__GetRawTemperature
{
	struct _turb1__GetRawTemperature *turb1__GetRawTemperature;	/* optional element of XSD type turb1:GetRawTemperature */
};
#endif

/* TurbulenceService.h:5386 */
#ifndef SOAP_TYPE___turb1__GetAnyCutoutWeb
#define SOAP_TYPE___turb1__GetAnyCutoutWeb (326)
/* Operation wrapper: */
struct __turb1__GetAnyCutoutWeb
{
	struct _turb1__GetAnyCutoutWeb *turb1__GetAnyCutoutWeb;	/* optional element of XSD type turb1:GetAnyCutoutWeb */
};
#endif

/* TurbulenceService.h:5441 */
#ifndef SOAP_TYPE___turb1__GetData_USCOREPython
#define SOAP_TYPE___turb1__GetData_USCOREPython (330)
/* Operation wrapper: */
struct __turb1__GetData_USCOREPython
{
	struct _turb1__GetData_USCOREPython *turb1__GetData_USCOREPython;	/* optional element of XSD type turb1:GetData_Python */
};
#endif

/* TurbulenceService.h:5496 */
#ifndef SOAP_TYPE___turb1__GetFilter_USCOREPython
#define SOAP_TYPE___turb1__GetFilter_USCOREPython (334)
/* Operation wrapper: */
struct __turb1__GetFilter_USCOREPython
{
	struct _turb1__GetFilter_USCOREPython *turb1__GetFilter_USCOREPython;	/* optional element of XSD type turb1:GetFilter_Python */
};
#endif

/* TurbulenceService.h:5551 */
#ifndef SOAP_TYPE___turb1__GetPosition_USCOREPython
#define SOAP_TYPE___turb1__GetPosition_USCOREPython (338)
/* Operation wrapper: */
struct __turb1__GetPosition_USCOREPython
{
	struct _turb1__GetPosition_USCOREPython *turb1__GetPosition_USCOREPython;	/* optional element of XSD type turb1:GetPosition_Python */
};
#endif

/* TurbulenceService.h:5606 */
#ifndef SOAP_TYPE___turb1__GetThreshold_USCOREPython
#define SOAP_TYPE___turb1__GetThreshold_USCOREPython (342)
/* Operation wrapper: */
struct __turb1__GetThreshold_USCOREPython
{
	struct _turb1__GetThreshold_USCOREPython *turb1__GetThreshold_USCOREPython;	/* optional element of XSD type turb1:GetThreshold_Python */
};
#endif

/* TurbulenceService.h:5661 */
#ifndef SOAP_TYPE___turb1__NullOp_
#define SOAP_TYPE___turb1__NullOp_ (344)
/* Operation wrapper: */
struct __turb1__NullOp_
{
	struct _turb1__NullOp *turb1__NullOp;	/* optional element of XSD type turb1:NullOp */
};
#endif

/* TurbulenceService.h:5716 */
#ifndef SOAP_TYPE___turb1__GetVelocity_
#define SOAP_TYPE___turb1__GetVelocity_ (346)
/* Operation wrapper: */
struct __turb1__GetVelocity_
{
	struct _turb1__GetVelocity *turb1__GetVelocity;	/* optional element of XSD type turb1:GetVelocity */
};
#endif

/* TurbulenceService.h:5771 */
#ifndef SOAP_TYPE___turb1__GetMagneticField_
#define SOAP_TYPE___turb1__GetMagneticField_ (348)
/* Operation wrapper: */
struct __turb1__GetMagneticField_
{
	struct _turb1__GetMagneticField *turb1__GetMagneticField;	/* optional element of XSD type turb1:GetMagneticField */
};
#endif

/* TurbulenceService.h:5826 */
#ifndef SOAP_TYPE___turb1__GetVectorPotential_
#define SOAP_TYPE___turb1__GetVectorPotential_ (350)
/* Operation wrapper: */
struct __turb1__GetVectorPotential_
{
	struct _turb1__GetVectorPotential *turb1__GetVectorPotential;	/* optional element of XSD type turb1:GetVectorPotential */
};
#endif

/* TurbulenceService.h:5881 */
#ifndef SOAP_TYPE___turb1__GetPressure_
#define SOAP_TYPE___turb1__GetPressure_ (352)
/* Operation wrapper: */
struct __turb1__GetPressure_
{
	struct _turb1__GetPressure *turb1__GetPressure;	/* optional element of XSD type turb1:GetPressure */
};
#endif

/* TurbulenceService.h:5936 */
#ifndef SOAP_TYPE___turb1__GetDensity_
#define SOAP_TYPE___turb1__GetDensity_ (354)
/* Operation wrapper: */
struct __turb1__GetDensity_
{
	struct _turb1__GetDensity *turb1__GetDensity;	/* optional element of XSD type turb1:GetDensity */
};
#endif

/* TurbulenceService.h:5991 */
#ifndef SOAP_TYPE___turb1__GetTemperature_
#define SOAP_TYPE___turb1__GetTemperature_ (356)
/* Operation wrapper: */
struct __turb1__GetTemperature_
{
	struct _turb1__GetTemperature *turb1__GetTemperature;	/* optional element of XSD type turb1:GetTemperature */
};
#endif

/* TurbulenceService.h:6046 */
#ifndef SOAP_TYPE___turb1__GetVelocityAndPressure_
#define SOAP_TYPE___turb1__GetVelocityAndPressure_ (358)
/* Operation wrapper: */
struct __turb1__GetVelocityAndPressure_
{
	struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure;	/* optional element of XSD type turb1:GetVelocityAndPressure */
};
#endif

/* TurbulenceService.h:6101 */
#ifndef SOAP_TYPE___turb1__GetVelocityAndTemperature_
#define SOAP_TYPE___turb1__GetVelocityAndTemperature_ (360)
/* Operation wrapper: */
struct __turb1__GetVelocityAndTemperature_
{
	struct _turb1__GetVelocityAndTemperature *turb1__GetVelocityAndTemperature;	/* optional element of XSD type turb1:GetVelocityAndTemperature */
};
#endif

/* TurbulenceService.h:6156 */
#ifndef SOAP_TYPE___turb1__GetVelocityGradient_
#define SOAP_TYPE___turb1__GetVelocityGradient_ (362)
/* Operation wrapper: */
struct __turb1__GetVelocityGradient_
{
	struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient;	/* optional element of XSD type turb1:GetVelocityGradient */
};
#endif

/* TurbulenceService.h:6211 */
#ifndef SOAP_TYPE___turb1__GetMagneticFieldGradient_
#define SOAP_TYPE___turb1__GetMagneticFieldGradient_ (364)
/* Operation wrapper: */
struct __turb1__GetMagneticFieldGradient_
{
	struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient;	/* optional element of XSD type turb1:GetMagneticFieldGradient */
};
#endif

/* TurbulenceService.h:6266 */
#ifndef SOAP_TYPE___turb1__GetVectorPotentialGradient_
#define SOAP_TYPE___turb1__GetVectorPotentialGradient_ (366)
/* Operation wrapper: */
struct __turb1__GetVectorPotentialGradient_
{
	struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient;	/* optional element of XSD type turb1:GetVectorPotentialGradient */
};
#endif

/* TurbulenceService.h:6321 */
#ifndef SOAP_TYPE___turb1__GetPressureGradient_
#define SOAP_TYPE___turb1__GetPressureGradient_ (368)
/* Operation wrapper: */
struct __turb1__GetPressureGradient_
{
	struct _turb1__GetPressureGradient *turb1__GetPressureGradient;	/* optional element of XSD type turb1:GetPressureGradient */
};
#endif

/* TurbulenceService.h:6376 */
#ifndef SOAP_TYPE___turb1__GetDensityGradient_
#define SOAP_TYPE___turb1__GetDensityGradient_ (370)
/* Operation wrapper: */
struct __turb1__GetDensityGradient_
{
	struct _turb1__GetDensityGradient *turb1__GetDensityGradient;	/* optional element of XSD type turb1:GetDensityGradient */
};
#endif

/* TurbulenceService.h:6431 */
#ifndef SOAP_TYPE___turb1__GetTemperatureGradient_
#define SOAP_TYPE___turb1__GetTemperatureGradient_ (372)
/* Operation wrapper: */
struct __turb1__GetTemperatureGradient_
{
	struct _turb1__GetTemperatureGradient *turb1__GetTemperatureGradient;	/* optional element of XSD type turb1:GetTemperatureGradient */
};
#endif

/* TurbulenceService.h:6486 */
#ifndef SOAP_TYPE___turb1__GetVelocityHessian_
#define SOAP_TYPE___turb1__GetVelocityHessian_ (374)
/* Operation wrapper: */
struct __turb1__GetVelocityHessian_
{
	struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian;	/* optional element of XSD type turb1:GetVelocityHessian */
};
#endif

/* TurbulenceService.h:6541 */
#ifndef SOAP_TYPE___turb1__GetMagneticHessian_
#define SOAP_TYPE___turb1__GetMagneticHessian_ (376)
/* Operation wrapper: */
struct __turb1__GetMagneticHessian_
{
	struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian;	/* optional element of XSD type turb1:GetMagneticHessian */
};
#endif

/* TurbulenceService.h:6596 */
#ifndef SOAP_TYPE___turb1__GetVectorPotentialHessian_
#define SOAP_TYPE___turb1__GetVectorPotentialHessian_ (378)
/* Operation wrapper: */
struct __turb1__GetVectorPotentialHessian_
{
	struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian;	/* optional element of XSD type turb1:GetVectorPotentialHessian */
};
#endif

/* TurbulenceService.h:6651 */
#ifndef SOAP_TYPE___turb1__GetPressureHessian_
#define SOAP_TYPE___turb1__GetPressureHessian_ (380)
/* Operation wrapper: */
struct __turb1__GetPressureHessian_
{
	struct _turb1__GetPressureHessian *turb1__GetPressureHessian;	/* optional element of XSD type turb1:GetPressureHessian */
};
#endif

/* TurbulenceService.h:6706 */
#ifndef SOAP_TYPE___turb1__GetDensityHessian_
#define SOAP_TYPE___turb1__GetDensityHessian_ (382)
/* Operation wrapper: */
struct __turb1__GetDensityHessian_
{
	struct _turb1__GetDensityHessian *turb1__GetDensityHessian;	/* optional element of XSD type turb1:GetDensityHessian */
};
#endif

/* TurbulenceService.h:6761 */
#ifndef SOAP_TYPE___turb1__GetTemperatureHessian_
#define SOAP_TYPE___turb1__GetTemperatureHessian_ (384)
/* Operation wrapper: */
struct __turb1__GetTemperatureHessian_
{
	struct _turb1__GetTemperatureHessian *turb1__GetTemperatureHessian;	/* optional element of XSD type turb1:GetTemperatureHessian */
};
#endif

/* TurbulenceService.h:6816 */
#ifndef SOAP_TYPE___turb1__GetVelocityLaplacian_
#define SOAP_TYPE___turb1__GetVelocityLaplacian_ (386)
/* Operation wrapper: */
struct __turb1__GetVelocityLaplacian_
{
	struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian;	/* optional element of XSD type turb1:GetVelocityLaplacian */
};
#endif

/* TurbulenceService.h:6871 */
#ifndef SOAP_TYPE___turb1__GetMagneticFieldLaplacian_
#define SOAP_TYPE___turb1__GetMagneticFieldLaplacian_ (388)
/* Operation wrapper: */
struct __turb1__GetMagneticFieldLaplacian_
{
	struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian;	/* optional element of XSD type turb1:GetMagneticFieldLaplacian */
};
#endif

/* TurbulenceService.h:6926 */
#ifndef SOAP_TYPE___turb1__GetVectorPotentialLaplacian_
#define SOAP_TYPE___turb1__GetVectorPotentialLaplacian_ (390)
/* Operation wrapper: */
struct __turb1__GetVectorPotentialLaplacian_
{
	struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian;	/* optional element of XSD type turb1:GetVectorPotentialLaplacian */
};
#endif

/* TurbulenceService.h:6982 */
#ifndef SOAP_TYPE___turb1__GetPosition_
#define SOAP_TYPE___turb1__GetPosition_ (392)
/* Operation wrapper: */
struct __turb1__GetPosition_
{
	struct _turb1__GetPosition *turb1__GetPosition;	/* optional element of XSD type turb1:GetPosition */
};
#endif

/* TurbulenceService.h:7037 */
#ifndef SOAP_TYPE___turb1__GetThreshold_
#define SOAP_TYPE___turb1__GetThreshold_ (394)
/* Operation wrapper: */
struct __turb1__GetThreshold_
{
	struct _turb1__GetThreshold *turb1__GetThreshold;	/* optional element of XSD type turb1:GetThreshold */
};
#endif

/* TurbulenceService.h:7092 */
#ifndef SOAP_TYPE___turb1__GetForce_
#define SOAP_TYPE___turb1__GetForce_ (396)
/* Operation wrapper: */
struct __turb1__GetForce_
{
	struct _turb1__GetForce *turb1__GetForce;	/* optional element of XSD type turb1:GetForce */
};
#endif

/* TurbulenceService.h:7147 */
#ifndef SOAP_TYPE___turb1__GetInvariant_
#define SOAP_TYPE___turb1__GetInvariant_ (398)
/* Operation wrapper: */
struct __turb1__GetInvariant_
{
	struct _turb1__GetInvariant *turb1__GetInvariant;	/* optional element of XSD type turb1:GetInvariant */
};
#endif

/* TurbulenceService.h:7202 */
#ifndef SOAP_TYPE___turb1__GetBoxFilter_
#define SOAP_TYPE___turb1__GetBoxFilter_ (400)
/* Operation wrapper: */
struct __turb1__GetBoxFilter_
{
	struct _turb1__GetBoxFilter *turb1__GetBoxFilter;	/* optional element of XSD type turb1:GetBoxFilter */
};
#endif

/* TurbulenceService.h:7259 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGS_
#define SOAP_TYPE___turb1__GetBoxFilterSGS_ (402)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGS_
{
	struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS;	/* optional element of XSD type turb1:GetBoxFilterSGS */
};
#endif

/* TurbulenceService.h:7316 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor_
#define SOAP_TYPE___turb1__GetBoxFilterSGSsymtensor_ (404)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGSsymtensor_
{
	struct _turb1__GetBoxFilterSGSsymtensor *turb1__GetBoxFilterSGSsymtensor;	/* optional element of XSD type turb1:GetBoxFilterSGSsymtensor */
};
#endif

/* TurbulenceService.h:7371 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGStensor_
#define SOAP_TYPE___turb1__GetBoxFilterSGStensor_ (406)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGStensor_
{
	struct _turb1__GetBoxFilterSGStensor *turb1__GetBoxFilterSGStensor;	/* optional element of XSD type turb1:GetBoxFilterSGStensor */
};
#endif

/* TurbulenceService.h:7427 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSvector_
#define SOAP_TYPE___turb1__GetBoxFilterSGSvector_ (408)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGSvector_
{
	struct _turb1__GetBoxFilterSGSvector *turb1__GetBoxFilterSGSvector;	/* optional element of XSD type turb1:GetBoxFilterSGSvector */
};
#endif

/* TurbulenceService.h:7482 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterSGSscalar_
#define SOAP_TYPE___turb1__GetBoxFilterSGSscalar_ (410)
/* Operation wrapper: */
struct __turb1__GetBoxFilterSGSscalar_
{
	struct _turb1__GetBoxFilterSGSscalar *turb1__GetBoxFilterSGSscalar;	/* optional element of XSD type turb1:GetBoxFilterSGSscalar */
};
#endif

/* TurbulenceService.h:7537 */
#ifndef SOAP_TYPE___turb1__GetBoxFilterGradient_
#define SOAP_TYPE___turb1__GetBoxFilterGradient_ (412)
/* Operation wrapper: */
struct __turb1__GetBoxFilterGradient_
{
	struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient;	/* optional element of XSD type turb1:GetBoxFilterGradient */
};
#endif

/* TurbulenceService.h:7593 */
#ifndef SOAP_TYPE___turb1__GetLaplacianOfGradient_
#define SOAP_TYPE___turb1__GetLaplacianOfGradient_ (414)
/* Operation wrapper: */
struct __turb1__GetLaplacianOfGradient_
{
	struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient;	/* optional element of XSD type turb1:GetLaplacianOfGradient */
};
#endif

/* TurbulenceService.h:7649 */
#ifndef SOAP_TYPE___turb1__GetVelocityBatch_
#define SOAP_TYPE___turb1__GetVelocityBatch_ (416)
/* Operation wrapper: */
struct __turb1__GetVelocityBatch_
{
	struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch;	/* optional element of XSD type turb1:GetVelocityBatch */
};
#endif

/* TurbulenceService.h:7705 */
#ifndef SOAP_TYPE___turb1__GetRawVelocity_
#define SOAP_TYPE___turb1__GetRawVelocity_ (418)
/* Operation wrapper: */
struct __turb1__GetRawVelocity_
{
	struct _turb1__GetRawVelocity *turb1__GetRawVelocity;	/* optional element of XSD type turb1:GetRawVelocity */
};
#endif

/* TurbulenceService.h:7761 */
#ifndef SOAP_TYPE___turb1__GetRawMagneticField_
#define SOAP_TYPE___turb1__GetRawMagneticField_ (420)
/* Operation wrapper: */
struct __turb1__GetRawMagneticField_
{
	struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField;	/* optional element of XSD type turb1:GetRawMagneticField */
};
#endif

/* TurbulenceService.h:7817 */
#ifndef SOAP_TYPE___turb1__GetRawVectorPotential_
#define SOAP_TYPE___turb1__GetRawVectorPotential_ (422)
/* Operation wrapper: */
struct __turb1__GetRawVectorPotential_
{
	struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential;	/* optional element of XSD type turb1:GetRawVectorPotential */
};
#endif

/* TurbulenceService.h:7873 */
#ifndef SOAP_TYPE___turb1__GetRawPressure_
#define SOAP_TYPE___turb1__GetRawPressure_ (424)
/* Operation wrapper: */
struct __turb1__GetRawPressure_
{
	struct _turb1__GetRawPressure *turb1__GetRawPressure;	/* optional element of XSD type turb1:GetRawPressure */
};
#endif

/* TurbulenceService.h:7929 */
#ifndef SOAP_TYPE___turb1__GetRawDensity_
#define SOAP_TYPE___turb1__GetRawDensity_ (426)
/* Operation wrapper: */
struct __turb1__GetRawDensity_
{
	struct _turb1__GetRawDensity *turb1__GetRawDensity;	/* optional element of XSD type turb1:GetRawDensity */
};
#endif

/* TurbulenceService.h:7985 */
#ifndef SOAP_TYPE___turb1__GetRawTemperature_
#define SOAP_TYPE___turb1__GetRawTemperature_ (428)
/* Operation wrapper: */
struct __turb1__GetRawTemperature_
{
	struct _turb1__GetRawTemperature *turb1__GetRawTemperature;	/* optional element of XSD type turb1:GetRawTemperature */
};
#endif

/* TurbulenceService.h:8041 */
#ifndef SOAP_TYPE___turb1__GetAnyCutoutWeb_
#define SOAP_TYPE___turb1__GetAnyCutoutWeb_ (430)
/* Operation wrapper: */
struct __turb1__GetAnyCutoutWeb_
{
	struct _turb1__GetAnyCutoutWeb *turb1__GetAnyCutoutWeb;	/* optional element of XSD type turb1:GetAnyCutoutWeb */
};
#endif

/* TurbulenceService.h:8096 */
#ifndef SOAP_TYPE___turb1__GetData_USCOREPython_
#define SOAP_TYPE___turb1__GetData_USCOREPython_ (432)
/* Operation wrapper: */
struct __turb1__GetData_USCOREPython_
{
	struct _turb1__GetData_USCOREPython *turb1__GetData_USCOREPython;	/* optional element of XSD type turb1:GetData_Python */
};
#endif

/* TurbulenceService.h:8151 */
#ifndef SOAP_TYPE___turb1__GetFilter_USCOREPython_
#define SOAP_TYPE___turb1__GetFilter_USCOREPython_ (434)
/* Operation wrapper: */
struct __turb1__GetFilter_USCOREPython_
{
	struct _turb1__GetFilter_USCOREPython *turb1__GetFilter_USCOREPython;	/* optional element of XSD type turb1:GetFilter_Python */
};
#endif

/* TurbulenceService.h:8206 */
#ifndef SOAP_TYPE___turb1__GetPosition_USCOREPython_
#define SOAP_TYPE___turb1__GetPosition_USCOREPython_ (436)
/* Operation wrapper: */
struct __turb1__GetPosition_USCOREPython_
{
	struct _turb1__GetPosition_USCOREPython *turb1__GetPosition_USCOREPython;	/* optional element of XSD type turb1:GetPosition_Python */
};
#endif

/* TurbulenceService.h:8261 */
#ifndef SOAP_TYPE___turb1__GetThreshold_USCOREPython_
#define SOAP_TYPE___turb1__GetThreshold_USCOREPython_ (438)
/* Operation wrapper: */
struct __turb1__GetThreshold_USCOREPython_
{
	struct _turb1__GetThreshold_USCOREPython *turb1__GetThreshold_USCOREPython;	/* optional element of XSD type turb1:GetThreshold_Python */
};
#endif

/* TurbulenceService.h:9090 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (439)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* TurbulenceService.h:9090 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (440)
/* Type SOAP_ENV__Code is a recursive data type (in)directly referencing itself through its (base) class members */
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of XSD type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of XSD type SOAP-ENV:Code */
};
#endif
#endif

/* TurbulenceService.h:9090 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (442)
/* SOAP-ENV:Detail complex type: */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below)
	   WARNING: do not create a cyclic data structure graph throught this element unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
	void *fault;	/* transient (not serialized) */
};
#endif
#endif

/* TurbulenceService.h:9090 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (445)
/* SOAP-ENV:Reason complex type: */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of XSD type xsd:string */
};
#endif
#endif

/* TurbulenceService.h:9090 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (446)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of XSD type xsd:QName */
	char *faultstring;	/* optional element of XSD type xsd:string */
	char *faultactor;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of XSD type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of XSD type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of XSD type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of XSD type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of XSD type SOAP-ENV:Detail */
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* TurbulenceService.h:119 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* TurbulenceService.h:119 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__NullOp(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__NullOp *turb1__NullOp, struct _turb1__NullOpResponse *turb1__NullOpResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocity *turb1__GetVelocity, struct _turb1__GetVelocityResponse *turb1__GetVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticField(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticField *turb1__GetMagneticField, struct _turb1__GetMagneticFieldResponse *turb1__GetMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotential(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotential *turb1__GetVectorPotential, struct _turb1__GetVectorPotentialResponse *turb1__GetVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressure *turb1__GetPressure, struct _turb1__GetPressureResponse *turb1__GetPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetDensity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensity *turb1__GetDensity, struct _turb1__GetDensityResponse *turb1__GetDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetTemperature(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetTemperature *turb1__GetTemperature, struct _turb1__GetTemperatureResponse *turb1__GetTemperatureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityAndPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure, struct _turb1__GetVelocityAndPressureResponse *turb1__GetVelocityAndPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityAndTemperature(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityAndTemperature *turb1__GetVelocityAndTemperature, struct _turb1__GetVelocityAndTemperatureResponse *turb1__GetVelocityAndTemperatureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient, struct _turb1__GetVelocityGradientResponse *turb1__GetVelocityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticFieldGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient, struct _turb1__GetMagneticFieldGradientResponse *turb1__GetMagneticFieldGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotentialGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient, struct _turb1__GetVectorPotentialGradientResponse *turb1__GetVectorPotentialGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPressureGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureGradient *turb1__GetPressureGradient, struct _turb1__GetPressureGradientResponse *turb1__GetPressureGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetDensityGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityGradient *turb1__GetDensityGradient, struct _turb1__GetDensityGradientResponse *turb1__GetDensityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetTemperatureGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetTemperatureGradient *turb1__GetTemperatureGradient, struct _turb1__GetTemperatureGradientResponse *turb1__GetTemperatureGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian, struct _turb1__GetVelocityHessianResponse *turb1__GetVelocityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian, struct _turb1__GetMagneticHessianResponse *turb1__GetMagneticHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotentialHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian, struct _turb1__GetVectorPotentialHessianResponse *turb1__GetVectorPotentialHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPressureHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureHessian *turb1__GetPressureHessian, struct _turb1__GetPressureHessianResponse *turb1__GetPressureHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetDensityHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityHessian *turb1__GetDensityHessian, struct _turb1__GetDensityHessianResponse *turb1__GetDensityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetTemperatureHessian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetTemperatureHessian *turb1__GetTemperatureHessian, struct _turb1__GetTemperatureHessianResponse *turb1__GetTemperatureHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian, struct _turb1__GetVelocityLaplacianResponse *turb1__GetVelocityLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticFieldLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian, struct _turb1__GetMagneticFieldLaplacianResponse *turb1__GetMagneticFieldLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotentialLaplacian(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian, struct _turb1__GetVectorPotentialLaplacianResponse *turb1__GetVectorPotentialLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPosition *turb1__GetPosition, struct _turb1__GetPositionResponse *turb1__GetPositionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetThreshold(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetThreshold *turb1__GetThreshold, struct _turb1__GetThresholdResponse *turb1__GetThresholdResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetForce(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetForce *turb1__GetForce, struct _turb1__GetForceResponse *turb1__GetForceResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetInvariant(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetInvariant *turb1__GetInvariant, struct _turb1__GetInvariantResponse *turb1__GetInvariantResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilter *turb1__GetBoxFilter, struct _turb1__GetBoxFilterResponse *turb1__GetBoxFilterResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGS(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS, struct _turb1__GetBoxFilterSGSResponse *turb1__GetBoxFilterSGSResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGSsymtensor(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGSsymtensor *turb1__GetBoxFilterSGSsymtensor, struct _turb1__GetBoxFilterSGSsymtensorResponse *turb1__GetBoxFilterSGSsymtensorResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGStensor(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGStensor *turb1__GetBoxFilterSGStensor, struct _turb1__GetBoxFilterSGStensorResponse *turb1__GetBoxFilterSGStensorResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGSvector(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGSvector *turb1__GetBoxFilterSGSvector, struct _turb1__GetBoxFilterSGSvectorResponse *turb1__GetBoxFilterSGSvectorResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGSscalar(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGSscalar *turb1__GetBoxFilterSGSscalar, struct _turb1__GetBoxFilterSGSscalarResponse *turb1__GetBoxFilterSGSscalarResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient, struct _turb1__GetBoxFilterGradientResponse *turb1__GetBoxFilterGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetLaplacianOfGradient(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient, struct _turb1__GetLaplacianOfGradientResponse *turb1__GetLaplacianOfGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityBatch(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch, struct _turb1__GetVelocityBatchResponse *turb1__GetVelocityBatchResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawVelocity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVelocity *turb1__GetRawVelocity, struct _turb1__GetRawVelocityResponse *turb1__GetRawVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawMagneticField(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField, struct _turb1__GetRawMagneticFieldResponse *turb1__GetRawMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawVectorPotential(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential, struct _turb1__GetRawVectorPotentialResponse *turb1__GetRawVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawPressure(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawPressure *turb1__GetRawPressure, struct _turb1__GetRawPressureResponse *turb1__GetRawPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawDensity(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawDensity *turb1__GetRawDensity, struct _turb1__GetRawDensityResponse *turb1__GetRawDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawTemperature(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawTemperature *turb1__GetRawTemperature, struct _turb1__GetRawTemperatureResponse *turb1__GetRawTemperatureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetAnyCutoutWeb(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetAnyCutoutWeb *turb1__GetAnyCutoutWeb, struct _turb1__GetAnyCutoutWebResponse *turb1__GetAnyCutoutWebResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetData_USCOREPython(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetData_USCOREPython *turb1__GetData_USCOREPython, struct _turb1__GetData_USCOREPythonResponse *turb1__GetData_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetFilter_USCOREPython(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetFilter_USCOREPython *turb1__GetFilter_USCOREPython, struct _turb1__GetFilter_USCOREPythonResponse *turb1__GetFilter_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPosition_USCOREPython(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPosition_USCOREPython *turb1__GetPosition_USCOREPython, struct _turb1__GetPosition_USCOREPythonResponse *turb1__GetPosition_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetThreshold_USCOREPython(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetThreshold_USCOREPython *turb1__GetThreshold_USCOREPython, struct _turb1__GetThreshold_USCOREPythonResponse *turb1__GetThreshold_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__NullOp_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__NullOp *turb1__NullOp, struct _turb1__NullOpResponse *turb1__NullOpResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocity_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocity *turb1__GetVelocity, struct _turb1__GetVelocityResponse *turb1__GetVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticField_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticField *turb1__GetMagneticField, struct _turb1__GetMagneticFieldResponse *turb1__GetMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotential_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotential *turb1__GetVectorPotential, struct _turb1__GetVectorPotentialResponse *turb1__GetVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPressure_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressure *turb1__GetPressure, struct _turb1__GetPressureResponse *turb1__GetPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetDensity_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensity *turb1__GetDensity, struct _turb1__GetDensityResponse *turb1__GetDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetTemperature_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetTemperature *turb1__GetTemperature, struct _turb1__GetTemperatureResponse *turb1__GetTemperatureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityAndPressure_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityAndPressure *turb1__GetVelocityAndPressure, struct _turb1__GetVelocityAndPressureResponse *turb1__GetVelocityAndPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityAndTemperature_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityAndTemperature *turb1__GetVelocityAndTemperature, struct _turb1__GetVelocityAndTemperatureResponse *turb1__GetVelocityAndTemperatureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityGradient *turb1__GetVelocityGradient, struct _turb1__GetVelocityGradientResponse *turb1__GetVelocityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticFieldGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldGradient *turb1__GetMagneticFieldGradient, struct _turb1__GetMagneticFieldGradientResponse *turb1__GetMagneticFieldGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotentialGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialGradient *turb1__GetVectorPotentialGradient, struct _turb1__GetVectorPotentialGradientResponse *turb1__GetVectorPotentialGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPressureGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureGradient *turb1__GetPressureGradient, struct _turb1__GetPressureGradientResponse *turb1__GetPressureGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetDensityGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityGradient *turb1__GetDensityGradient, struct _turb1__GetDensityGradientResponse *turb1__GetDensityGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetTemperatureGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetTemperatureGradient *turb1__GetTemperatureGradient, struct _turb1__GetTemperatureGradientResponse *turb1__GetTemperatureGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityHessian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityHessian *turb1__GetVelocityHessian, struct _turb1__GetVelocityHessianResponse *turb1__GetVelocityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticHessian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticHessian *turb1__GetMagneticHessian, struct _turb1__GetMagneticHessianResponse *turb1__GetMagneticHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotentialHessian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialHessian *turb1__GetVectorPotentialHessian, struct _turb1__GetVectorPotentialHessianResponse *turb1__GetVectorPotentialHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPressureHessian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPressureHessian *turb1__GetPressureHessian, struct _turb1__GetPressureHessianResponse *turb1__GetPressureHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetDensityHessian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetDensityHessian *turb1__GetDensityHessian, struct _turb1__GetDensityHessianResponse *turb1__GetDensityHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetTemperatureHessian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetTemperatureHessian *turb1__GetTemperatureHessian, struct _turb1__GetTemperatureHessianResponse *turb1__GetTemperatureHessianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityLaplacian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityLaplacian *turb1__GetVelocityLaplacian, struct _turb1__GetVelocityLaplacianResponse *turb1__GetVelocityLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetMagneticFieldLaplacian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetMagneticFieldLaplacian *turb1__GetMagneticFieldLaplacian, struct _turb1__GetMagneticFieldLaplacianResponse *turb1__GetMagneticFieldLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVectorPotentialLaplacian_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVectorPotentialLaplacian *turb1__GetVectorPotentialLaplacian, struct _turb1__GetVectorPotentialLaplacianResponse *turb1__GetVectorPotentialLaplacianResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPosition_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPosition *turb1__GetPosition, struct _turb1__GetPositionResponse *turb1__GetPositionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetThreshold_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetThreshold *turb1__GetThreshold, struct _turb1__GetThresholdResponse *turb1__GetThresholdResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetForce_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetForce *turb1__GetForce, struct _turb1__GetForceResponse *turb1__GetForceResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetInvariant_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetInvariant *turb1__GetInvariant, struct _turb1__GetInvariantResponse *turb1__GetInvariantResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilter_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilter *turb1__GetBoxFilter, struct _turb1__GetBoxFilterResponse *turb1__GetBoxFilterResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGS_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGS *turb1__GetBoxFilterSGS, struct _turb1__GetBoxFilterSGSResponse *turb1__GetBoxFilterSGSResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGSsymtensor_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGSsymtensor *turb1__GetBoxFilterSGSsymtensor, struct _turb1__GetBoxFilterSGSsymtensorResponse *turb1__GetBoxFilterSGSsymtensorResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGStensor_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGStensor *turb1__GetBoxFilterSGStensor, struct _turb1__GetBoxFilterSGStensorResponse *turb1__GetBoxFilterSGStensorResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGSvector_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGSvector *turb1__GetBoxFilterSGSvector, struct _turb1__GetBoxFilterSGSvectorResponse *turb1__GetBoxFilterSGSvectorResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterSGSscalar_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterSGSscalar *turb1__GetBoxFilterSGSscalar, struct _turb1__GetBoxFilterSGSscalarResponse *turb1__GetBoxFilterSGSscalarResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetBoxFilterGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetBoxFilterGradient *turb1__GetBoxFilterGradient, struct _turb1__GetBoxFilterGradientResponse *turb1__GetBoxFilterGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetLaplacianOfGradient_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetLaplacianOfGradient *turb1__GetLaplacianOfGradient, struct _turb1__GetLaplacianOfGradientResponse *turb1__GetLaplacianOfGradientResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetVelocityBatch_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetVelocityBatch *turb1__GetVelocityBatch, struct _turb1__GetVelocityBatchResponse *turb1__GetVelocityBatchResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawVelocity_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVelocity *turb1__GetRawVelocity, struct _turb1__GetRawVelocityResponse *turb1__GetRawVelocityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawMagneticField_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawMagneticField *turb1__GetRawMagneticField, struct _turb1__GetRawMagneticFieldResponse *turb1__GetRawMagneticFieldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawVectorPotential_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawVectorPotential *turb1__GetRawVectorPotential, struct _turb1__GetRawVectorPotentialResponse *turb1__GetRawVectorPotentialResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawPressure_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawPressure *turb1__GetRawPressure, struct _turb1__GetRawPressureResponse *turb1__GetRawPressureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawDensity_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawDensity *turb1__GetRawDensity, struct _turb1__GetRawDensityResponse *turb1__GetRawDensityResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetRawTemperature_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetRawTemperature *turb1__GetRawTemperature, struct _turb1__GetRawTemperatureResponse *turb1__GetRawTemperatureResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetAnyCutoutWeb_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetAnyCutoutWeb *turb1__GetAnyCutoutWeb, struct _turb1__GetAnyCutoutWebResponse *turb1__GetAnyCutoutWebResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetData_USCOREPython_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetData_USCOREPython *turb1__GetData_USCOREPython, struct _turb1__GetData_USCOREPythonResponse *turb1__GetData_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetFilter_USCOREPython_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetFilter_USCOREPython *turb1__GetFilter_USCOREPython, struct _turb1__GetFilter_USCOREPythonResponse *turb1__GetFilter_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetPosition_USCOREPython_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetPosition_USCOREPython *turb1__GetPosition_USCOREPython, struct _turb1__GetPosition_USCOREPythonResponse *turb1__GetPosition_USCOREPythonResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___turb1__GetThreshold_USCOREPython_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _turb1__GetThreshold_USCOREPython *turb1__GetThreshold_USCOREPython, struct _turb1__GetThreshold_USCOREPythonResponse *turb1__GetThreshold_USCOREPythonResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
